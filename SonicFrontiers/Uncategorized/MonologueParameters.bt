local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef struct {
    uint64 pointer;
} cstring<read=ReadCString>;

string ReadCString(cstring& str) {
    if (str.pointer > 0) return ReadString(BASE_OFFSET_VALUE + str.pointer);
    return "(null)";
}

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); float playSpanTime<comment="再生間隔時間">;
    FSeek(p + 8); cstring labelNames[24]<comment="ラベルテーブル",optimize=false>;

    FSeek(p + 392);
} MonologueIslandParameters;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); cstring labelNames[4]<comment="ラベルテーブル",optimize=false>;

    FSeek(p + 64);
} MonologueMultiTextParameters;

typedef byte sint8;

enum<sint8> Value
{
    SteppeIsland1 = 0,
    DesertIsland = 1,
    VolcanicIsland = 2,
    TowerIsland = 3,
    SteppeIsland2 = 4,
    Num = 5,
};

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);    MonologueIslandParameters islands[5]<comment="島ごとのパラメータ",optimize=false>;
    FSeek(p + 1960); MonologueMultiTextParameters multiText<comment="複数テキスト構成パラメータ">;
    FSeek(p + 2024); sint8 firstTheEndNotifyCount<comment="TheEndの初回通知のカウント">;
    FSeek(p + 2025); sint8 theEndNotifyCount<comment="Theendの通知のカウント">;
    FSeek(p + 2026); Value dummy<comment="dummy">;

    FSeek(p + 2032);
} MonologueParameters;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
MonologueParameters monologueParameters;
