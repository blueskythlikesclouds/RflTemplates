local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef struct {
    uint64 pointer;
} cstring<read=ReadCString>;

string ReadCString(cstring& str) {
    if (str.pointer > 0) return ReadString(BASE_OFFSET_VALUE + str.pointer);
    return "(null)";
}

enum<byte> bool {
    False = 0,
    True = 1,
};

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  cstring modelName;
    FSeek(p + 16); cstring skeltonName;
    FSeek(p + 32); bool noInstance;

    FSeek(p + 40);
} GismoBasicParam;

typedef byte sint8;

enum<sint8> ShapeType
{
    SHAPE_BOX = 0,
    SHAPE_SPHERE = 1,
    SHAPE_CAPSULE = 2,
    SHAPE_CYLINDER = 3,
    SHAPE_MESH = 4,
    SHAPE_NONE = 5,
};

enum<sint8> BasePoint
{
    BASE_CENTER = 0,
    BASE_Z_PLANE = 1,
    BASE_X_PLANE = 2,
    BASE_Y_PLANE = 3,
};

typedef struct {
    float x;
    float y;
    float z;
    float w<hidden=true>;
} vector3;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  ShapeType shape;
    FSeek(p + 1);  BasePoint basePoint;
    FSeek(p + 4);  float width;
    FSeek(p + 8);  float height;
    FSeek(p + 12); float depth;
    FSeek(p + 16); cstring meshName;
    FSeek(p + 32); vector3 shapeOffset;
    FSeek(p + 48); float shapeSizeOffset;

    FSeek(p + 64);
} GismoCollision;

enum<sint8> RigidBodyType
{
    RIGID_BODY_NONE = 0,
    RIGID_BODY_STATIC = 1,
    RIGID_BODY_DYNAMIC = 2,
};

enum<sint8> RigidBodyMaterial
{
    RIGID_BODY_MAT_NONE = 0,
    RIGID_BODY_MAT_WOOD = 1,
    RIGID_BODY_MAT_IRON = 2,
    NUM_RIGID_BODY_MATS = 3,
};

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float mass;
    FSeek(p + 4);  float friction;
    FSeek(p + 8);  float gravityFactor;
    FSeek(p + 12); float restitution;
    FSeek(p + 16); float linearDamping;
    FSeek(p + 20); float angularDamping;
    FSeek(p + 24); float maxLinearVelocity;

    FSeek(p + 28);
} PhysicsParam;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); RigidBodyType rigidBodyType;
    FSeek(p + 1); RigidBodyMaterial rigidBodyMaterial;
    FSeek(p + 4); PhysicsParam physicsParam;

    FSeek(p + 32);
} GismoRegidBody;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  cstring motionName;
    FSeek(p + 16); bool syncFrame;
    FSeek(p + 17); bool stopEndFrame;

    FSeek(p + 24);
} MotionData;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  cstring texSrtAnimName[3]<optimize=false>;
    FSeek(p + 48); cstring texPatAnimName[3]<optimize=false>;
    FSeek(p + 96); cstring matAnimName[3]<optimize=false>;

    FSeek(p + 144);
} MirageAnimData;

typedef ubyte uint8;

enum<uint8> MotionType
{
    MOTION_SWING = 0,
    MOTION_ROTATE = 1,
    MOTION_LINEAR_SWING = 2,
};

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  MotionType motionType;
    FSeek(p + 16); vector3 axis;
    FSeek(p + 32); float power;
    FSeek(p + 36); float speedScale;
    FSeek(p + 40); float time;

    FSeek(p + 48);
} ProgramMotionData;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  cstring effectName;
    FSeek(p + 16); bool linkMotionStop;

    FSeek(p + 24);
} EffectData;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); cstring cueName;

    FSeek(p + 16);
} SoundData;

enum<sint8> KillType
{
    KILL_TYPE_NOT_KILL = 0,
    KILL_TYPE_KILL = 1,
    KILL_TYPE_BREAK = 2,
    KILL_TYPE_MOTION = 3,
};

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float gravity;
    FSeek(p + 4);  float lifeTime;
    FSeek(p + 8);  float mass;
    FSeek(p + 12); float friction;
    FSeek(p + 16); float explosionScale;
    FSeek(p + 20); float impulseScale;

    FSeek(p + 24);
} DebrisData;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  KillType killType;
    FSeek(p + 4);  float killTime;
    FSeek(p + 8);  cstring breakMotionName;
    FSeek(p + 24); DebrisData debrisData;

    FSeek(p + 48);
} KillData;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);   MotionData motionData;
    FSeek(p + 24);  MirageAnimData mirageAnimData;
    FSeek(p + 176); ProgramMotionData programMotionData;
    FSeek(p + 224); EffectData effectData;
    FSeek(p + 248); SoundData soundData;
    FSeek(p + 264); KillData killData;

    FSeek(p + 320);
} ReactionData;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);    float rangeIn;
    FSeek(p + 4);    float rangeDistance;
    FSeek(p + 8);    GismoBasicParam basicParam;
    FSeek(p + 48);   GismoCollision collision;
    FSeek(p + 112);  GismoRegidBody rigidBody;
    FSeek(p + 144);  ReactionData reactionIdle;
    FSeek(p + 464);  ReactionData reactionEnter;
    FSeek(p + 784);  ReactionData reactionLeave;
    FSeek(p + 1104); ReactionData reactionStay;
    FSeek(p + 1424); ReactionData reactionStayMove;
    FSeek(p + 1744); ReactionData reactionDamage;
    FSeek(p + 2064); bool ignoreMeteorShowerAndRespawnOnReenterRange;

    FSeek(p + 2080);
} GismoConfigDesignData;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
GismoConfigDesignData gismoConfigDesignData;
