local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef struct {
    float x;
    float y;
    float z;
    float w<hidden=true>;
} vector3;

typedef ubyte uint8;

enum<uint8> OffMeshLinkDirection
{
    OffMeshLinkUnidirectional = 0,
    OffMeshLinkBidirectional = 1,
};

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  vector3 source<comment="始点">;
    FSeek(p + 16); vector3 destination<comment="終点">;
    FSeek(p + 32); float radius<comment="半径">;
    FSeek(p + 36); uint16 flags<comment="フラグ">;
    FSeek(p + 38); uint8 area<comment="エリア">;
    FSeek(p + 39); OffMeshLinkDirection direction<comment="方向">;
    FSeek(p + 40); uint32 userID<comment="ユーザーID">;

    FSeek(p + 48);
} OffMeshLinkElement;

typedef struct {
    uint64 pointer;
    uint64 size;
    if (pointer > 0 && size > 0)
    {
        local uint64 p<hidden=true> = FTell();
        FSeek(BASE_OFFSET_VALUE + pointer);
        OffMeshLinkElement data[size]<optimize=false>;
        FSeek(p);
    }
} array_OffMeshLinkElement;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); array_OffMeshLinkElement elements<comment="elements">;

    FSeek(p + 32);
} OffMeshLinkParameter;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
OffMeshLinkParameter offMeshLinkParameter;
