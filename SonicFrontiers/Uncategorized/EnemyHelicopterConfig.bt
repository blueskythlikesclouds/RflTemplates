local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef struct {
    float x;
    float y;
    float z;
    float w<hidden=true>;
} vector3;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float radius<comment="半径">;
    FSeek(p + 16); vector3 pos<comment="ローカル位置">;

    FSeek(p + 32);
} HeliDamageCol;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float followRotateSpeed<comment="プレイヤー追従回転速度[°/s]">;
    FSeek(p + 16); HeliDamageCol damageCol<comment="ダメージコリジョン">;

    FSeek(p + 48);
} HeliCommon;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); float life<comment="生存時間(s)">;
    FSeek(p + 4); float attackInterval<comment="攻撃間隔(s)">;

    FSeek(p + 8);
} HeliAttackBase;

typedef ubyte uint8;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  HeliAttackBase heliAttackBase;
    FSeek(p + 8);  float bulletSpeed<comment="弾の速度[m/s]">;
    FSeek(p + 12); float gunRotateSpeed<comment="バルカン回転速度[°/s]">;
    FSeek(p + 16); uint8 attackChainNum<comment="連射回数">;
    FSeek(p + 20); float attackChainInterval<comment="連射間隔">;

    FSeek(p + 24);
} HeliBullet;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); HeliAttackBase heliAttackBase;
    FSeek(p + 8); float bombSpeed<comment="爆弾落下速度[m/s]">;

    FSeek(p + 12);
} HeliBomb;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  HeliCommon common<comment="基本設定">;
    FSeek(p + 48); HeliBullet attackBullet<comment="バルカン">;
    FSeek(p + 72); HeliBomb attackBomb<comment="爆弾">;

    FSeek(p + 96);
} EnemyHelicopterConfig;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
EnemyHelicopterConfig enemyHelicopterConfig;
