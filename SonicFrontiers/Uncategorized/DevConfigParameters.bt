local uint64 BASE_OFFSET_VALUE<hidden=true>;

enum<byte> bool {
    False = 0,
    True = 1,
};

typedef byte sint8;

enum<sint8> ReplayMode
{
    REPLAY_MODE_OFF = 0,
    REPLAY_MODE_RECORD = 1,
    REPLAY_MODE_PLAY = 2,
    REPLAY_MODE_GHOST = 3,
};

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); bool autoSaveEnabled<comment="AutoSave">;
    FSeek(p + 1); bool gismoEnabled<comment="Gismo">;
    FSeek(p + 2); bool reportEnabled<comment="Report">;
    FSeek(p + 3); bool skillTreeEnabled<comment="SkillTree">;
    FSeek(p + 4); bool tutorialEnabled<comment="Tutorial">;
    FSeek(p + 5); bool arcadeModeEnabled<comment="ArcadeMode">;
    FSeek(p + 6); bool practice<comment="Practice">;
    FSeek(p + 7); bool practiceTimeLimitEnabled<comment="Practice Timelimit">;
    FSeek(p + 8); bool creditsEnabled<comment="Credits">;
    FSeek(p + 9); ReplayMode replayMode<comment="Replay">;

    FSeek(p + 10);
} DevConfigParameters;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
DevConfigParameters devConfigParameters;
