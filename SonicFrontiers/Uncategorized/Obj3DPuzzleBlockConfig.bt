local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef ubyte uint8;

typedef struct {
    float x;
    float y;
    float z;
    float w<hidden=true>;
} vector3;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); uint8 columns[5]<comment="列",optimize=false>;

    FSeek(p + 5);
} FSRow;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); FSRow rows[5]<comment="行",optimize=false>;

    FSeek(p + 25);
} FSLayer;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  uint8 numLayers<comment="層数">;
    FSeek(p + 1);  uint8 numRows<comment="行数">;
    FSeek(p + 2);  uint8 numColumns<comment="列数">;
    FSeek(p + 16); vector3 offsetToTopLeft<comment="左上最奥ブロック中央までのオフセット">;
    FSeek(p + 32); FSLayer layers[5]<comment="層",optimize=false>;

    FSeek(p + 160);
} FreeShape;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); FreeShape freeShapes[29]<comment="形状配列",optimize=false>;

    FSeek(p + 4640);
} Obj3DPuzzleBlockConfig;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
Obj3DPuzzleBlockConfig obj3DPuzzleBlockConfig;
