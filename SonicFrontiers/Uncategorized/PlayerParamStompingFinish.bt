local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef byte sint8;

enum<sint8> Condition
{
    Time = 0,
    Animation = 1,
};

enum<sint8> Shape
{
    Sphere = 0,
    Cylinder = 1,
    Box = 2,
};

typedef struct {
    float x;
    float y;
    float z;
    float w<hidden=true>;
} vector3;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  Condition condition<comment="判定条件">;
    FSeek(p + 1);  sint8 count<comment="判定回数">;
    FSeek(p + 4);  float spanTime<comment="間隔時間">;
    FSeek(p + 8);  Shape shape<comment="形状">;
    FSeek(p + 16); vector3 shapeSize<comment="サイズ">;
    FSeek(p + 32); vector3 shapeOffset<comment="位置オフセット">;

    FSeek(p + 48);
} PlayerParamAttackCollider;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  PlayerParamAttackCollider hit<comment="ヒット判定">;
    FSeek(p + 48); float ignoreSwingingTime<comment="空振り無効時間">;

    FSeek(p + 64);
} PlayerParamStompingFinish;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
PlayerParamStompingFinish playerParamStompingFinish;
