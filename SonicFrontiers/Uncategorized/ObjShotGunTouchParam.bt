local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float targetRadius<comment="コリジョン半径">;
    FSeek(p + 4);  float catchDistance<comment="キャッチ可能距離">;
    FSeek(p + 8);  float linearDamping<comment="速度減衰率">;
    FSeek(p + 12); float angularDamping<comment="角速度減衰率">;
    FSeek(p + 16); float appearDelay<comment="出現遅延時間">;

    FSeek(p + 20);
} ObjShotGunTouchTargetParam;

typedef struct {
    float x;
    float y;
    float z;
    float w<hidden=true>;
} vector3;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  vector3 cameraOffset<comment="カメラオフセット">;
    FSeek(p + 16); float cameraHoldTime<comment="ターゲット注視時間">;

    FSeek(p + 32);
} ObjShotGunTouchCameraParam;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  ObjShotGunTouchTargetParam targetParam<comment="ターゲット">;
    FSeek(p + 32); ObjShotGunTouchCameraParam cameraParam<comment="演出カメラ">;

    FSeek(p + 64);
} ObjShotGunTouchParam;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
ObjShotGunTouchParam objShotGunTouchParam;
