local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef struct {
    float x;
    float y;
    float z;
    float w<hidden=true>;
} vector3;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float scaleSv<comment="SVスケール">;
    FSeek(p + 4);  float scaleFv<comment="FVスケール">;
    FSeek(p + 8);  float appearEffTimer<comment="出現エフェクトタイマー">;
    FSeek(p + 12); float colliderRadius<comment="本体コリジョン半径">;
    FSeek(p + 16); float colliderHeight<comment="本体コリジョン高さ">;
    FSeek(p + 32); vector3 colliderOffset<comment="本体コリジョンオフセット">;
    FSeek(p + 48); float laserColliderRadius<comment="ビームコリジョン半径">;
    FSeek(p + 52); float laserColliderHeight<comment="ビームコリジョン高さ">;
    FSeek(p + 64); vector3 laserColliderSizeSV<comment="SV用ビームコリジョン各辺の長さ">;
    FSeek(p + 80); float missileColliderRadius<comment="ミサイルコリジョン半径">;
    FSeek(p + 84); float missileColliderHeight<comment="ミサイルコリジョン高さ">;
    FSeek(p + 96); vector3 missileColliderOffset<comment="ミサイルコリジョンオフセット">;

    FSeek(p + 112);
} EnemyEggRoboConfig;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
EnemyEggRoboConfig enemyEggRoboConfig;
