local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); float radius<comment="スフィアスコリジョン半径">;

    FSeek(p + 4);
} ObjMowingGrassParameter;

typedef struct {
    float x;
    float y;
    float z;
    float w<hidden=true>;
} vector3;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float modelScale<comment="モデルスケール">;
    FSeek(p + 4);  float capsuleRadiusSprouts<comment="コリジョン半径（苗）">;
    FSeek(p + 8);  float capsuleRadiusFlower<comment="コリジョン半径（花）">;
    FSeek(p + 12); float capsuleHeightSprouts<comment="コリジョン高さ（苗）">;
    FSeek(p + 16); float capsuleHeightFlower<comment="コリジョン高さ（花）">;
    FSeek(p + 32); vector3 effectOffsetSprouts<comment="エフェクトオフセット（苗）">;
    FSeek(p + 48); vector3 effectOffsetFlower<comment="エフェクトオフセット（花）">;
    FSeek(p + 64); float beeAttractDist<comment="ハチを引き寄せる距離">;
    FSeek(p + 68); float efficacyTimeFlower<comment="ハチを引き寄せる時間(秒)">;

    FSeek(p + 80);
} ObjBeeFlowerParameter;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  vector3 targetOffset<comment="目標点のオフセット">;
    FSeek(p + 16); vector3 targetOffsetFlower<comment="目標点のオフセット(花)">;
    FSeek(p + 32); float collRadius<comment="攻撃コリジョンの半径">;
    FSeek(p + 36); float modelScale<comment="ハチ大きさ">;
    FSeek(p + 40); float beeMoveSpeed<comment="ハチ移動速度">;
    FSeek(p + 44); float reflectionAngle<comment="壁から反射する角度(度)">;
    FSeek(p + 48); float coefAverage<comment="群れ移動係数">;
    FSeek(p + 52); float coefCenter<comment="目的地移動係数">;
    FSeek(p + 56); float coefRepulse<comment="反発移動係数">;
    FSeek(p + 60); float waitTimeAfterAttack<comment="攻撃後の待機時間(秒)">;
    FSeek(p + 64); float waitTimeAfterFlower<comment="花にいる待機時間(秒)">;

    FSeek(p + 80);
} ObjBeeSwarmParameter;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  ObjMowingGrassParameter grassParam<comment="草刈りコリジョン">;
    FSeek(p + 16); ObjBeeFlowerParameter beeFlowerParam<comment="ハチの集まる花">;
    FSeek(p + 96); ObjBeeSwarmParameter beeSwarm<comment="ハチ">;

    FSeek(p + 176);
} ObjMowingParameterElement;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); ObjMowingParameterElement element[3]<comment="草刈り",optimize=false>;

    FSeek(p + 528);
} ObjMowingParameter;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
ObjMowingParameter objMowingParameter;
