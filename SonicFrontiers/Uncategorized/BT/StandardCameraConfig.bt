local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef int32 sint32;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);   float distance<comment="距離">;
    FSeek(p + 4);   float distanceSuspensionK<comment="距離変動のバネ定数">;
    FSeek(p + 8);   float minElevation<comment="仰角最小値">;
    FSeek(p + 12);  float maxElevation<comment="仰角最大値">;
    FSeek(p + 16);  float azimuthSensitivity<comment="方位角の追従感度">;
    FSeek(p + 20);  float elevationUpSensitivity<comment="仰角の上昇追従感度">;
    FSeek(p + 24);  float elevationDownSensitivity<comment="仰角の下降追従感度">;
    FSeek(p + 28);  float elevationOffset<comment="仰角オフセット">;
    FSeek(p + 32);  float targetUpOffset<comment="注視点の上方オフセット">;
    FSeek(p + 36);  float targetMinUpOffsetLimit<comment="注視点の最小上方オフセットリミット">;
    FSeek(p + 40);  float targetMaxUpOffsetLimit<comment="注視点の最大上方オフセットリミット">;
    FSeek(p + 44);  float targetMinUpOffsetLimitDistance<comment="注視点の上方オフセットリミットが最小値になる距離">;
    FSeek(p + 48);  float targetMaxUpOffsetLimitDistance<comment="注視点の上方オフセットリミットが最大値になる距離">;
    FSeek(p + 52);  float targetOffsetSuspensionK<comment="注視点オフセットのバネ定数">;
    FSeek(p + 56);  float delayAllowDistance<comment="注視点遅延の許容距離">;
    FSeek(p + 60);  float delayLimitDistance<comment="注視点遅延の限界距離">;
    FSeek(p + 64);  float delaySuspensionK<comment="注視点遅延のバネ定数">;
    FSeek(p + 68);  float autocontrolDisabledTime<comment="手動操作後に自動操作を無効化する時間">;
    FSeek(p + 72);  float chaseSegmentSuspensionK<comment="追跡チェーン回転時のバネ定数">;
    FSeek(p + 76);  float chaseSegmentShortenSpeed<comment="追跡チェーンを縮める速度">;
    FSeek(p + 80);  sint32 chaseSegmentMaxCount<comment="追跡チェーンの許容セグメント数">;
    FSeek(p + 84);  float inertiaMinDecel<comment="慣性の最小減速度">;
    FSeek(p + 88);  float inertiaOvershootAngle<comment="慣性によってオーバーシュートする最大角度">;
    FSeek(p + 92);  float resetSuspensionK<comment="カメラリセット時のバネ定数">;
    FSeek(p + 96);  float downDirectionDotThreshold<comment="下向きとみなす内積の境界値">;
    FSeek(p + 100); float baseUpLeanRate<comment="通常時のターゲット上方向反映割合">;

    FSeek(p + 104);
} StandardCameraCommonParameter;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float minDistance<comment="最小距離">;
    FSeek(p + 4);  float maxDistance<comment="最大距離">;
    FSeek(p + 8);  float minDistanceAccel<comment="最小距離に対応する加速度">;
    FSeek(p + 12); float maxDistanceAccel<comment="最大距離に対応する加速度">;
    FSeek(p + 16); float distanceSuspensionK<comment="距離変動のバネ定数">;
    FSeek(p + 20); float elevationOffset<comment="仰角オフセット">;
    FSeek(p + 24); float azimuthSensitivity<comment="方位角の追従感度">;
    FSeek(p + 28); float targetOffsetSuspensionK<comment="注視点オフセットのバネ定数">;
    FSeek(p + 32); float targetUpOffset<comment="注視点の上方オフセット">;
    FSeek(p + 36); float delayAllowDistance<comment="注視点遅延の許容距離">;
    FSeek(p + 40); float delayLimitDistance<comment="注視点遅延の限界距離">;
    FSeek(p + 44); float delaySuspensionK<comment="注視点遅延のバネ定数">;

    FSeek(p + 48);
} StandardCameraDashParameter;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float minDistance<comment="最小距離">;
    FSeek(p + 4);  float maxDistance<comment="最大距離">;
    FSeek(p + 8);  float elevationOffset<comment="仰角オフセット">;
    FSeek(p + 12); float azimuthSensitivity<comment="方位角の追従感度">;
    FSeek(p + 16); float elevationUpSensitivity<comment="仰角の上昇追従感度">;
    FSeek(p + 20); float elevationDownSensitivity<comment="仰角の下降追従感度">;
    FSeek(p + 24); float targetUpOffset<comment="注視点の上方オフセット">;
    FSeek(p + 28); float minDelayLimitDistance<comment="注視点遅延の最小限界距離">;
    FSeek(p + 32); float maxDelayLimitDistance<comment="注視点遅延の最大限界距離">;

    FSeek(p + 36);
} StandardCameraCyloopParameter;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float distance<comment="距離">;
    FSeek(p + 4);  float minElevation<comment="仰角最小値">;
    FSeek(p + 8);  float maxElevation<comment="仰角最大値">;
    FSeek(p + 12); float elevationOffset<comment="仰角オフセット">;
    FSeek(p + 16); float minElevationCyloop<comment="[サイループ中]仰角最小値">;
    FSeek(p + 20); float maxElevationCyloop<comment="[サイループ中]仰角最大値">;
    FSeek(p + 24); float elevationOffsetCyloop<comment="[サイループ中]仰角オフセット">;
    FSeek(p + 28); float targetUpOffset<comment="注視点の上方オフセット">;
    FSeek(p + 32); float delayAllowDistance<comment="注視点遅延の許容距離">;
    FSeek(p + 36); float delayLimitDistance<comment="注視点遅延の限界距離">;
    FSeek(p + 40); float delaySuspensionK<comment="注視点遅延のバネ定数">;
    FSeek(p + 44); float panningSuspensionK<comment="パンニング遅延のバネ定数">;
    FSeek(p + 48); float interiorPanningDistance<comment="近距離パンニング距離">;
    FSeek(p + 52); float interiorPanningSuspensionK<comment="近距離パンニング遅延のバネ定数">;

    FSeek(p + 56);
} StandardCameraLockonParameter;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); float distance<comment="距離">;
    FSeek(p + 4); float targetUpOffset<comment="注視点の上方オフセット">;

    FSeek(p + 8);
} StandardCameraWallParameter;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float azimuthSensitivity<comment="方位角の追従感度">;
    FSeek(p + 4);  float elevationUpSensitivity<comment="仰角の上昇追従感度">;
    FSeek(p + 8);  float elevationDownSensitivity<comment="仰角の下降追従感度">;
    FSeek(p + 12); float targetUpOffset<comment="注視点の上方オフセット">;
    FSeek(p + 16); float baseUpLeanRate<comment="通常時のターゲット上方向反映割合">;

    FSeek(p + 20);
} StandardCameraLoopParameter;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float distance<comment="距離">;
    FSeek(p + 4);  float distanceSuspensionK<comment="距離変動のバネ定数">;
    FSeek(p + 8);  float elevationOffset<comment="仰角オフセット">;
    FSeek(p + 12); float azimuthMinOffset<comment="最小方位角オフセット">;
    FSeek(p + 16); float azimuthMaxOffset<comment="最大方位角オフセット">;
    FSeek(p + 20); float azimuthMinOffsetDistance<comment="最小方位角オフセットになる距離">;
    FSeek(p + 24); float azimuthMaxOffsetDistance<comment="最大方位角オフセットになる距離">;
    FSeek(p + 28); float azimuthSensitivity<comment="方位角の追従感度">;
    FSeek(p + 32); float targetOffsetSuspensionK<comment="注視点オフセットのバネ定数">;
    FSeek(p + 36); float targetMinUpOffset<comment="注視点の最小上方オフセット">;
    FSeek(p + 40); float targetMaxUpOffset<comment="注視点の最大上方オフセット">;
    FSeek(p + 44); float targetFrontOffset<comment="注視点の前方オフセット">;
    FSeek(p + 48); float delayAllowDistance<comment="注視点遅延の許容距離">;
    FSeek(p + 52); float delayLimitDistance<comment="注視点遅延の限界距離">;
    FSeek(p + 56); float delaySuspensionK<comment="注視点遅延のバネ定数">;
    FSeek(p + 60); float manualControlTime<comment="手動操作を維持する時間">;

    FSeek(p + 64);
} StandardCameraBattleParameter;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float minManualRotationSpeed<comment="マニュアル操作時の最低回転速度">;
    FSeek(p + 4);  float maxManualRotationSpeed<comment="マニュアル操作時の最高回転速度">;
    FSeek(p + 8);  float minDistanceScale<comment="距離スケール[最小]">;
    FSeek(p + 12); float maxDistanceScale<comment="距離スケール[最大]">;
    FSeek(p + 16); float maxElevationAddOffset<comment="追加の仰角オフセット[最大]">;
    FSeek(p + 20); float minTargetUpOffsetScale<comment="注視点の上方オフセットスケール[最小]">;
    FSeek(p + 24); float maxTargetUpOffsetScale<comment="注視点の上方オフセットスケール[最大]">;
    FSeek(p + 28); float minFovyRate<comment="最低レート時の画角スケール">;
    FSeek(p + 32); float minLimitFovy<comment="画角の最小限界値">;

    FSeek(p + 36);
} StandardCameraOptionParameter;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);   StandardCameraCommonParameter common<comment="共通">;
    FSeek(p + 104); StandardCameraDashParameter dash<comment="ダッシュ">;
    FSeek(p + 152); StandardCameraCyloopParameter cyloop<comment="サイループ">;
    FSeek(p + 188); StandardCameraCyloopParameter cyloopSnipe<comment="サイループ[スナイプ]">;
    FSeek(p + 224); StandardCameraLockonParameter lockon<comment="ロックオン[標準]">;
    FSeek(p + 280); StandardCameraLockonParameter lockonCharger<comment="ロックオン[Charger]">;
    FSeek(p + 336); StandardCameraLockonParameter lockonSpider<comment="ロックオン[Spider]">;
    FSeek(p + 392); StandardCameraLockonParameter lockonDaruma<comment="ロックオン[Daruma]">;
    FSeek(p + 448); StandardCameraLockonParameter lockonNinja<comment="ロックオン[Ninja]">;
    FSeek(p + 504); StandardCameraLockonParameter lockonSumo<comment="ロックオン[Sumo]">;
    FSeek(p + 560); StandardCameraWallParameter wall<comment="壁走り">;
    FSeek(p + 568); StandardCameraLoopParameter loop<comment="ループ地形">;
    FSeek(p + 588); StandardCameraBattleParameter battle<comment="バトル">;
    FSeek(p + 652); StandardCameraOptionParameter option<comment="オプション">;

    FSeek(p + 688);
} StandardCameraConfig;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
StandardCameraConfig standardCameraConfig;
