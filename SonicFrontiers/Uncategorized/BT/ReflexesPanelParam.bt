local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); float interoplateTimeActivate<comment="カメラ起動時補間時間">;
    FSeek(p + 4); float interoplateTimeDeactivate<comment="カメラ終了時補間時間">;

    FSeek(p + 8);
} ReflexesPanelCameraParam;

typedef struct {
    float x;
    float y;
    float z;
    float w<hidden=true>;
} vector3;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  vector3 collisionHalfExtents<comment="コリジョン 各辺の長さの半分">;
    FSeek(p + 16); vector3 collisionOffset<comment="コリジョン オフセット">;

    FSeek(p + 32);
} ReflexesPanelPanelParam;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  ReflexesPanelCameraParam cameraParam<comment="カメラ">;
    FSeek(p + 16); ReflexesPanelPanelParam panelParam<comment="パネル">;

    FSeek(p + 48);
} ReflexesPanelParam;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
ReflexesPanelParam reflexesPanelParam;
