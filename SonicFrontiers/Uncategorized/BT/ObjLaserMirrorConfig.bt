local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef struct {
    float x;
    float y;
    float z;
    float w<hidden=true>;
} vector3;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float interoplateTimeActivate<comment="カメラ起動時補間時間">;
    FSeek(p + 4);  float interoplateTimeDeactivate<comment="カメラ終了時補間時間">;
    FSeek(p + 16); vector3 targetOffset<comment="注視点オフセット">;
    FSeek(p + 32); vector3 cameraPosOffset<comment="カメラオフセット">;

    FSeek(p + 48);
} GimmickCameraParam;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  GimmickCameraParam rotateMirrorH<comment="横回転鏡">;
    FSeek(p + 48); GimmickCameraParam rotateMirrorV<comment="縦回転鏡">;
    FSeek(p + 96); GimmickCameraParam moveMirror<comment="移動鏡">;

    FSeek(p + 144);
} ObjLaserMirrorConfig;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
ObjLaserMirrorConfig objLaserMirrorConfig;
