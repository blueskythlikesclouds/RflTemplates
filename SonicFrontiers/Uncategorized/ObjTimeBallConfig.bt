local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); float radius;
    FSeek(p + 4); float friction;
    FSeek(p + 8); float restitution;

    FSeek(p + 12);
} CollisionConfig;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float CorrectionsMaxDistance;
    FSeek(p + 4);  float CorrectionsMinDistance;
    FSeek(p + 8);  float CorrectionsAngle;
    FSeek(p + 12); float CorrectionsRatio;

    FSeek(p + 16);
} CorrectionsConfig;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float mass;
    FSeek(p + 4);  float linearDamping;
    FSeek(p + 8);  float angularDamping;
    FSeek(p + 12); float maxLinearVelocity;
    FSeek(p + 16); float maxLinearAcceleration;
    FSeek(p + 20); float linearVelocityTimes;
    FSeek(p + 24); float gravity;
    FSeek(p + 28); CollisionConfig collisionConfig;
    FSeek(p + 40); CorrectionsConfig correctionsConfig;

    FSeek(p + 56);
} ObjTimeBallConfig;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
ObjTimeBallConfig objTimeBallConfig;
