local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef struct {
    float x;
    float y;
    float z;
    float w<hidden=true>;
} vector3;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  float interoplateTimeActivate;
    FSeek(p + 4);  float interoplateTimeDeactivate;
    FSeek(p + 16); vector3 targetOffset;
    FSeek(p + 32); vector3 cameraPosOffset;

    FSeek(p + 48);
} GimmickCameraParam;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  GimmickCameraParam rotateMirrorH;
    FSeek(p + 48); GimmickCameraParam rotateMirrorV;
    FSeek(p + 96); GimmickCameraParam moveMirror;

    FSeek(p + 144);
} ObjLaserMirrorConfig;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
ObjLaserMirrorConfig objLaserMirrorConfig;
