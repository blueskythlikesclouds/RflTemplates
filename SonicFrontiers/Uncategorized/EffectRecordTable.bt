typedef ubyte uint8;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); uint8 no;

    FSeek(p + 1);
} Record;

typedef struct {
    long pointer;
} cstring<read=ReadCString>;

string ReadCString(cstring& str) {
    if (str.pointer > 0) return ReadString(64 + str.pointer);
    return "(null)";
}

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); Record base;
    FSeek(p + 8); cstring emitterSetName[2]<optimize=false>;

    FSeek(p + 40);
} EffectRecord;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); EffectRecord data[255]<optimize=false>;

    FSeek(p + 10200);
} EffectRecordTable;

LittleEndian();

FSeek(64);
EffectRecordTable data;
