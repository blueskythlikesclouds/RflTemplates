local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef ubyte uint8;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); uint8 no<comment="レコード番号">;

    FSeek(p + 1);
} Record;

typedef struct {
    uint64 pointer;
} cstring<read=ReadCString>;

string ReadCString(cstring& str) {
    if (str.pointer > 0) return ReadString(BASE_OFFSET_VALUE + str.pointer);
    return "(null)";
}

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); Record record;
    FSeek(p + 8); cstring emitterSetName[5]<comment="シーン名",optimize=false>;

    FSeek(p + 88);
} EffectRecord;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); EffectRecord data[255]<comment="data",optimize=false>;

    FSeek(p + 22440);
} EffectRecordTable;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
EffectRecordTable effectRecordTable;
