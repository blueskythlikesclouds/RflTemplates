local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef ubyte uint8;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  uint16 numRings<comment="所持リング数">;
    FSeek(p + 2);  uint8 ringLevel<comment="リングレベル">;
    FSeek(p + 3);  uint8 speedLevel<comment="スピードレベル">;
    FSeek(p + 4);  uint32 skill<comment="獲得スキル">;
    FSeek(p + 8);  uint32 expPoint<comment="経験値">;
    FSeek(p + 12); uint16 skillPoint<comment="所持スキルポイント">;
    FSeek(p + 14); uint8 boostGaugeLevel<comment="ブーストゲージレベル">;
    FSeek(p + 15); uint8 padding<comment="padding">;
    FSeek(p + 16); uint32 reserved0<comment="reserved0">;
    FSeek(p + 20); uint32 reserved1<comment="reserved1">;
    FSeek(p + 24); uint32 reserved2<comment="reserved2">;
    FSeek(p + 28); uint32 reserved3<comment="reserved3">;

    FSeek(p + 32);
} FriendCharacterData;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
FriendCharacterData friendCharacterData;
