local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef byte sint8;

enum<byte> bool {
    False = 0,
    True = 1,
};

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0x00); sint8 prio<comment="優先度">;
    FSeek(p + 0x01); bool defaultON<comment="セット時から重力有効か">;
    FSeek(p + 0x02); bool _fixed<comment="静止重力場か">;

    FSeek(p + 0x03);
} GravityFieldSetupParameter;

typedef struct {
    uint64 pointer;
} cstring<read=ReadCString>;

string ReadCString(cstring& str) {
    if (str.pointer > 0) return ReadString(BASE_OFFSET_VALUE - 0x10 + str.pointer);
    return "(null)";
}

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0); GravityFieldSetupParameter gravityFieldSetupParameter;
    FSeek(p + 0x04); float radius<comment="半径">;
    FSeek(p + 0x08); cstring pathName<comment="パス名">;

    FSeek(p + 0x18);
} GravityFieldCylinderSplineSetupParameter;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  GravityFieldCylinderSplineSetupParameter gravityFieldCylinderSplineSetupParameter;
    FSeek(p + 0x18); float innerRadius<comment="InnerRadius">;

    FSeek(p + 0x20);
} GravityFieldOutsideCylinderSplineSetupParameter;

typedef struct {
    float x;
    float y;
    float z;
    float w<hidden=true>;
} vector3;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0);  GravityFieldOutsideCylinderSplineSetupParameter gravityFieldOutsideCylinderSplineSetupParameter;
    FSeek(p + 0x20); vector3 extents<comment="extents">;

    FSeek(p + 0x30);
} GravityFieldOutsideHalfCylinderBoxSplineSetupParameter;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x50;

FSeek(BASE_OFFSET_VALUE);
GravityFieldOutsideHalfCylinderBoxSplineSetupParameter gravityFieldOutsideHalfCylinderBoxSplineSetupParameter;
