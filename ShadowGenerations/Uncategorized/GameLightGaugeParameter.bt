local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef struct {
    uint64 pointer;
} cstring<read=ReadCString>;

string ReadCString(cstring& str) {
    if (str.pointer > 0) return ReadString(BASE_OFFSET_VALUE + str.pointer);
    return "(null)";
}

typedef int32 sint32;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0x00); cstring name<comment="設定名">;
    FSeek(p + 0x10); sint32 value<comment="回復量">;

    FSeek(p + 0x18);
} GameLightGaugeParameterData;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0x00); GameLightGaugeParameterData data[80]<comment="ゲージ回復量設定",optimize=false>;

    FSeek(p + 0x780);
} GameLightGaugeParameter;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x50;

FSeek(BASE_OFFSET_VALUE);
GameLightGaugeParameter gameLightGaugeParameter;
