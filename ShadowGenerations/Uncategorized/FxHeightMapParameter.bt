local uint64 BASE_OFFSET_VALUE<hidden=true>;

enum<byte> bool {
    False = 0,
    True = 1,
};

typedef struct {
    float m[4 * 4];
} matrix44;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0x00); bool enable<comment="有効">;
    FSeek(p + 0x01); bool enableMultiHeightmap<comment="画面分割時に独立させる">;
    FSeek(p + 0x02); bool debugDrawFrustum<comment="フラスタム描画有効">;
    FSeek(p + 0x03); bool reprojection<comment="reprojection">;
    FSeek(p + 0x04); uint32 renderTargetWidth<comment="レンダーターゲット幅">;
    FSeek(p + 0x08); uint32 renderTargetHeight<comment="レンダーターゲット高さ">;
    FSeek(p + 0x0C); float referenceValue<comment="クリア値">;
    FSeek(p + 0x10); float heightScale<comment="高さスケール">;
    FSeek(p + 0x14); float fadeTime<comment="消失時間">;
    FSeek(p + 0x18); float colorMask<comment="変位による色影響度">;
    FSeek(p + 0x20); matrix44 viewMatrix<comment="viewMatrix">;
    FSeek(p + 0x60); matrix44 projMatrix<comment="projMatrix">;

    FSeek(p + 0xA0);
} FxHeightMapParameter;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x50;

FSeek(BASE_OFFSET_VALUE);
FxHeightMapParameter fxHeightMapParameter;
