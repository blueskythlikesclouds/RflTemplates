local uint64 BASE_OFFSET_VALUE<hidden=true>;

typedef byte sint8;

enum<sint8> LineType
{
    LINE3 = 0,
    LINE5 = 1,
    LINE_INF = 2
};

typedef struct {
    float x;
    float y;
    float z;
    float w<hidden=true>;
} vector3;

typedef struct {
    ubyte alpha;
    ubyte red;
    ubyte green;
    ubyte blue;
} color8;

typedef struct
{
    local uint64 p<hidden=true> = FTell();

    FSeek(p + 0x00); LineType lineType<comment="ライン">;
    FSeek(p + 0x04); float lineWidth<comment="走行ラインの幅">;
    FSeek(p + 0x08); float roadLength<comment="道の長さ">;
    FSeek(p + 0x0C); float speed<comment="速度">;
    FSeek(p + 0x10); float barricadeInterval<comment="障害物の配置間隔">;
    FSeek(p + 0x14); float emergencyDistance<comment="障害物の接近を知らせる距離">;
    FSeek(p + 0x20); vector3 barricadeSize<comment="障害物サイズ">;
    FSeek(p + 0x30); color8 roadColor<comment="道の色">;
    FSeek(p + 0x34); color8 barricadeColor<comment="障害物の色">;
    FSeek(p + 0x38); float cameraFovy<comment="カメラ視野角">;
    FSeek(p + 0x3C); float cameraDistance<comment="カメラ距離">;
    FSeek(p + 0x40); float cameraUpOffset<comment="カメラ上方オフセット">;
    FSeek(p + 0x44); float cameraShakeOffset<comment="カメラの揺れ幅">;

    FSeek(p + 0x50);
} ExtremeConfig;

LittleEndian();

uint32 signature<hidden=true>;

if (signature == 0x414E4942)
    BASE_OFFSET_VALUE = 0x40;

FSeek(BASE_OFFSET_VALUE);
ExtremeConfig extremeConfig;
