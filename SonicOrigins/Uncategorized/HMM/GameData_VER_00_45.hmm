Library "GameData_VER_00_45"
{
    using System.Numerics;
    using System.Runtime.InteropServices;

    public enum Status : sbyte
    {
        STATUS_ZERO_FILL = 0,
        STATUS_INITIALIZED = 1
    }

    [StructLayout(LayoutKind.Explicit, Size = 60)]
    public struct HeaderData
    {
        [FieldOffset(0)]  public uint signature;
        [FieldOffset(4)]  public byte version;
        [FieldOffset(5)]  public byte minorVersion;
        [FieldOffset(6)]  public Status status;
        [FieldOffset(7)]  public byte config;
        [FieldOffset(8)]  public uint playTime;
        [FieldOffset(12)] public uint playCount;
        [FieldOffset(16)] public uint saveDate;
        [FieldOffset(20)] public byte index;
        [FieldOffset(21)] public byte flags;
        [FieldOffset(22)] public unsafe fixed byte padding1[2];
        [FieldOffset(24)] public uint crc;
        [FieldOffset(28)] public unsafe fixed byte padding2[32];
    }

    [StructLayout(LayoutKind.Explicit, Size = 4)]
    public struct HeaderSubData
    {
        [FieldOffset(0)] public uint gameDataCompressSize;
    }

    public enum GameModeData_VER_00_45_Status : sbyte
    {
        STATUS_NONE = 0
    }

    public enum MainMenuMode : sbyte
    {
        MAINMENU_MODE_SONIC1 = 0,
        MAINMENU_MODE_SONICCD = 1,
        MAINMENU_MODE_SONIC2 = 2,
        MAINMENU_MODE_SONIC3K = 3,
        MAINMENU_MODE_MISSION = 4,
        MAINMENU_MODE_DATA = 5,
        MAINMENU_MODE_NUM = 6
    }

    public enum BootPlayMode : sbyte
    {
        BOOT_PLAYMODE_CLASSIC = 0,
        BOOT_PLAYMODE_ANNIVERSARY = 1,
        BOOT_PLAYMODE_BOSSRUSH = 2,
        BOOT_PLAYMODE_MIRRORING = 3,
        BOOT_PLAYMODE_MISSION = 4,
        BOOT_PLAYMODE_STORY = 5,
        BOOT_PLAYMODE_BLUE_SPHERES_ORIGINAL = 6,
        BOOT_PLAYMODE_BLUE_SPHERES_NEW = 7,
        BOOT_PLAYMODE_GAMEPLAY_COUNT = 8,
        BOOT_PLAYMODE_MUSEUM = 8,
        BOOT_PLAYMODE_RANKING = 9,
        BOOT_PLAYMODE_OPTION = 10,
        BOOT_PLAYMODE_TO_DLC = 11,
        BOOT_PLAYMODE_GAMEGEAR = 12,
        BOOT_PLAYMODE_PUZZLE = 13,
        BOOT_PLAYMODE_NUM = 14,
        BOOT_PLAYMODE_NONE = -1
    }

    public enum BootPlayer : sbyte
    {
        BOOT_PLAYER_SONIC = 0,
        BOOT_PLAYER_TAILS = 1,
        BOOT_PLAYER_KNUCKLES = 2,
        BOOT_PLAYER_SONIC_TAILS = 3,
        BOOT_PLAYER_KNUCKLES_TAILS = 4,
        BOOT_PLAYER_AMY = 5,
        BOOT_PLAYER_AMY_TAILS = 6,
        BOOT_PLAYER_NUM = 7,
        BOOT_PLAYER_NONE = -1
    }

    public enum TerrainLevel : int
    {
        LEVEL0 = 0,
        LEVEL1 = 1,
        LEVEL2 = 2,
        LEVEL3 = 3,
        NUM_LEVEL_TYPES = 4
    }

    [StructLayout(LayoutKind.Explicit, Size = 8)]
    public struct TerrainLevelData
    {
        [FieldOffset(0)] public TerrainLevel terrainLevel;
        [FieldOffset(4)] public bool userManual;
        [FieldOffset(5)] public unsafe fixed sbyte dym[3];
    }

    public enum GamePlayData_Status : sbyte
    {
        STATUS_NEWGAME = 0,
        STATUS_CONTINUE = 1
    }

    public enum GamePlayData_BootPlayer : sbyte
    {
        GamePlayData_BootPlayer_BOOT_PLAYER_SONIC = 0,
        GamePlayData_BootPlayer_BOOT_PLAYER_TAILS = 1,
        GamePlayData_BootPlayer_BOOT_PLAYER_KNUCKLES = 2,
        GamePlayData_BootPlayer_BOOT_PLAYER_SONIC_TAILS = 3,
        GamePlayData_BootPlayer_BOOT_PLAYER_KNUCKLES_TAILS = 4,
        GamePlayData_BootPlayer_BOOT_PLAYER_AMY = 5,
        GamePlayData_BootPlayer_BOOT_PLAYER_AMY_TAILS = 6,
        GamePlayData_BootPlayer_BOOT_PLAYER_NUM = 7,
        GamePlayData_BootPlayer_BOOT_PLAYER_NONE = -1
    }

    [StructLayout(LayoutKind.Explicit, Size = 8)]
    public struct Sonic3KSlotPlayData
    {
        [FieldOffset(0)] public uint allEmeraldFlags;
        [FieldOffset(4)] public int currentSlotNo;
    }

    [StructLayout(LayoutKind.Explicit, Size = 16)]
    public struct GamePlayData
    {
        [FieldOffset(0)] public GamePlayData_Status status;
        [FieldOffset(1)] public byte lastPlayedStageNo;
        [FieldOffset(2)] public byte lastPlayedBossRushStageIndex;
        [FieldOffset(3)] public GamePlayData_BootPlayer player;
        [FieldOffset(4)] public uint flags;
        [FieldOffset(8)] public Sonic3KSlotPlayData sonic3KSlotPlayData;
    }

    public enum LegacyModeData_Status : sbyte
    {
        STATUS_SAVED = 0
    }

    [StructLayout(LayoutKind.Explicit, Size = 65537)]
    public struct LegacyModeData
    {
        [FieldOffset(0)] public LegacyModeData_Status status;
        [FieldOffset(1)] public unsafe fixed byte legacySaveData[65536];
    }

    [StructLayout(LayoutKind.Explicit, Size = 3605936)]
    public struct GameModeData_VER_00_45
    {
        [FieldOffset(0)]       public GameModeData_VER_00_45_Status status;
        [FieldOffset(1)]       public MainMenuMode lastMainMenuMode;
        [FieldOffset(2)]       public unsafe fixed byte /* BootPlayMode[4] */ _lastPlayedMode[4];

        public unsafe BootPlayMode* lastPlayedMode
        {
            get
            {
                fixed (byte* p_lastPlayedMode = _lastPlayedMode)
                    return (BootPlayMode*)p_lastPlayedMode;
            }
        }

        [FieldOffset(6)]       public unsafe fixed byte /* BootPlayer[4] */ _lastPlayerClassic[4];

        public unsafe BootPlayer* lastPlayerClassic
        {
            get
            {
                fixed (byte* p_lastPlayerClassic = _lastPlayerClassic)
                    return (BootPlayer*)p_lastPlayerClassic;
            }
        }

        [FieldOffset(10)]      public unsafe fixed byte /* BootPlayer[4] */ _lastPlayerAnniversary[4];

        public unsafe BootPlayer* lastPlayerAnniversary
        {
            get
            {
                fixed (byte* p_lastPlayerAnniversary = _lastPlayerAnniversary)
                    return (BootPlayer*)p_lastPlayerAnniversary;
            }
        }

        [FieldOffset(14)]      public unsafe fixed byte /* BootPlayer[4] */ _lastPlayerMirroring[4];

        public unsafe BootPlayer* lastPlayerMirroring
        {
            get
            {
                fixed (byte* p_lastPlayerMirroring = _lastPlayerMirroring)
                    return (BootPlayer*)p_lastPlayerMirroring;
            }
        }

        [FieldOffset(18)]      public unsafe fixed byte /* BootPlayer[4] */ _lastPlayerBossRush[4];

        public unsafe BootPlayer* lastPlayerBossRush
        {
            get
            {
                fixed (byte* p_lastPlayerBossRush = _lastPlayerBossRush)
                    return (BootPlayer*)p_lastPlayerBossRush;
            }
        }

        [FieldOffset(22)]      public byte storyProgress;
        [FieldOffset(24)]      public unsafe fixed byte /* TerrainLevelData[7] */ _terrainLevelData[56];

        public unsafe TerrainLevelData* terrainLevelData
        {
            get
            {
                fixed (byte* p_terrainLevelData = _terrainLevelData)
                    return (TerrainLevelData*)p_terrainLevelData;
            }
        }

        [FieldOffset(80)]      public uint spinDashType;
        [FieldOffset(84)]      public unsafe fixed byte reserved[4];
        [FieldOffset(88)]      public uint flags;
        [FieldOffset(92)]      public unsafe fixed byte /* GamePlayData[74] */ _gamePlayData[1184];

        public unsafe GamePlayData* gamePlayData
        {
            get
            {
                fixed (byte* p_gamePlayData = _gamePlayData)
                    return (GamePlayData*)p_gamePlayData;
            }
        }

        [FieldOffset(1276)]    public unsafe fixed byte /* LegacyModeData[55] */ _legacyModeData[3604535];

        public unsafe LegacyModeData* legacyModeData
        {
            get
            {
                fixed (byte* p_legacyModeData = _legacyModeData)
                    return (LegacyModeData*)p_legacyModeData;
            }
        }

        [FieldOffset(3605811)] public unsafe fixed bool clearStoryStage[125];
    }

    [StructLayout(LayoutKind.Explicit, Size = 4)]
    public struct CollectionData
    {
        [FieldOffset(0)] public uint coin;
    }

    [StructLayout(LayoutKind.Explicit, Size = 160)]
    public struct CheckPointSave
    {
        [FieldOffset(0)] public unsafe fixed sbyte data[160];
    }

    [StructLayout(LayoutKind.Explicit, Size = 11360)]
    public struct CheckPointSaveData_VER_00_45
    {
        [FieldOffset(0)] public unsafe fixed byte /* CheckPointSave[71] */ _checkPointSave[11360];

        public unsafe CheckPointSave* checkPointSave
        {
            get
            {
                fixed (byte* p_checkPointSave = _checkPointSave)
                    return (CheckPointSave*)p_checkPointSave;
            }
        }
    }

    [StructLayout(LayoutKind.Explicit, Size = 32768)]
    public struct AnywareSave
    {
        [FieldOffset(0)] public unsafe fixed sbyte data[32768];
    }

    [StructLayout(LayoutKind.Explicit, Size = 2326528)]
    public struct AnywareSaveData_VER_00_45
    {
        [FieldOffset(0)] public unsafe fixed byte /* AnywareSave[71] */ _anywareSave[2326528];

        public unsafe AnywareSave* anywareSave
        {
            get
            {
                fixed (byte* p_anywareSave = _anywareSave)
                    return (AnywareSave*)p_anywareSave;
            }
        }
    }

    [StructLayout(LayoutKind.Explicit, Size = 8)]
    public struct StatValue
    {
        [FieldOffset(0)] public int value;
        [FieldOffset(4)] public bool assigned;
    }

    [StructLayout(LayoutKind.Explicit, Size = 536)]
    public struct StatsContainerData
    {
        [FieldOffset(0)]   public unsafe fixed byte /* StatValue[64] */ _stats[512];

        public unsafe StatValue* stats
        {
            get
            {
                fixed (byte* p_stats = _stats)
                    return (StatValue*)p_stats;
            }
        }

        [FieldOffset(512)] public unsafe fixed byte /* StatValue[3] */ _barrierStats[24];

        public unsafe StatValue* barrierStats
        {
            get
            {
                fixed (byte* p_barrierStats = _barrierStats)
                    return (StatValue*)p_barrierStats;
            }
        }
    }

    public enum RankType : sbyte
    {
        RANKTYPE_S = 0,
        RANKTYPE_A = 1,
        RANKTYPE_B = 2,
        RANKTYPE_C = 3,
        RANKTYPE_NUM = 4,
        RANKTYPE_INVALID = 4
    }

    [StructLayout(LayoutKind.Explicit, Size = 16)]
    public struct MissionStageSaveData
    {
        [FieldOffset(0)]  public uint playCount;
        [FieldOffset(4)]  public uint clearCount;
        [FieldOffset(8)]  public uint clearCountSRank;
        [FieldOffset(12)] public RankType clearRank;
        [FieldOffset(13)] public bool unlocked;
        [FieldOffset(14)] public ushort dmy;
    }

    public enum MissionKind : sbyte
    {
        MISSIONKIND_NONE = 0,
        MISSIONKIND_SONIC1_START = 1,
        MISSIONKIND_SONIC1_1 = 1,
        MISSIONKIND_SONIC1_2 = 2,
        MISSIONKIND_SONIC1_3 = 3,
        MISSIONKIND_SONIC1_4 = 4,
        MISSIONKIND_SONIC1_5 = 5,
        MISSIONKIND_SONIC1_6 = 6,
        MISSIONKIND_SONIC1_7 = 7,
        MISSIONKIND_SONIC1_8 = 8,
        MISSIONKIND_SONIC1_9 = 9,
        MISSIONKIND_SONIC1_10 = 10,
        MISSIONKIND_SONIC1_11 = 11,
        MISSIONKIND_SONIC1_12 = 12,
        MISSIONKIND_SONIC1_13 = 13,
        MISSIONKIND_SONIC1_14 = 14,
        MISSIONKIND_SONIC1_15 = 15,
        MISSIONKIND_SONIC1_16 = 16,
        MISSIONKIND_SONIC1_17 = 17,
        MISSIONKIND_SONIC1_18 = 18,
        MISSIONKIND_SONIC1_19 = 19,
        MISSIONKIND_SONIC1_20 = 20,
        MISSIONKIND_SONIC1_21 = 21,
        MISSIONKIND_SONIC1_22 = 22,
        MISSIONKIND_SONIC1_23 = 23,
        MISSIONKIND_SONIC1_24 = 24,
        MISSIONKIND_SONIC1_25 = 25,
        MISSIONKIND_SONIC1_END = 26,
        MISSIONKIND_SONIC2_START = 26,
        MISSIONKIND_SONIC2_1 = 26,
        MISSIONKIND_SONIC2_2 = 27,
        MISSIONKIND_SONIC2_3 = 28,
        MISSIONKIND_SONIC2_4 = 29,
        MISSIONKIND_SONIC2_5 = 30,
        MISSIONKIND_SONIC2_6 = 31,
        MISSIONKIND_SONIC2_7 = 32,
        MISSIONKIND_SONIC2_8 = 33,
        MISSIONKIND_SONIC2_9 = 34,
        MISSIONKIND_SONIC2_10 = 35,
        MISSIONKIND_SONIC2_11 = 36,
        MISSIONKIND_SONIC2_12 = 37,
        MISSIONKIND_SONIC2_13 = 38,
        MISSIONKIND_SONIC2_14 = 39,
        MISSIONKIND_SONIC2_15 = 40,
        MISSIONKIND_SONIC2_16 = 41,
        MISSIONKIND_SONIC2_17 = 42,
        MISSIONKIND_SONIC2_18 = 43,
        MISSIONKIND_SONIC2_19 = 44,
        MISSIONKIND_SONIC2_20 = 45,
        MISSIONKIND_SONIC2_21 = 46,
        MISSIONKIND_SONIC2_22 = 47,
        MISSIONKIND_SONIC2_23 = 48,
        MISSIONKIND_SONIC2_24 = 49,
        MISSIONKIND_SONIC2_25 = 50,
        MISSIONKIND_SONIC2_END = 51,
        MISSIONKIND_SONIC3K_START = 51,
        MISSIONKIND_SONIC3K_1 = 51,
        MISSIONKIND_SONIC3K_2 = 52,
        MISSIONKIND_SONIC3K_3 = 53,
        MISSIONKIND_SONIC3K_4 = 54,
        MISSIONKIND_SONIC3K_5 = 55,
        MISSIONKIND_SONIC3K_6 = 56,
        MISSIONKIND_SONIC3K_7 = 57,
        MISSIONKIND_SONIC3K_8 = 58,
        MISSIONKIND_SONIC3K_9 = 59,
        MISSIONKIND_SONIC3K_10 = 60,
        MISSIONKIND_SONIC3K_11 = 61,
        MISSIONKIND_SONIC3K_12 = 62,
        MISSIONKIND_SONIC3K_13 = 63,
        MISSIONKIND_SONIC3K_14 = 64,
        MISSIONKIND_SONIC3K_15 = 65,
        MISSIONKIND_SONIC3K_16 = 66,
        MISSIONKIND_SONIC3K_17 = 67,
        MISSIONKIND_SONIC3K_18 = 68,
        MISSIONKIND_SONIC3K_19 = 69,
        MISSIONKIND_SONIC3K_20 = 70,
        MISSIONKIND_SONIC3K_21 = 71,
        MISSIONKIND_SONIC3K_22 = 72,
        MISSIONKIND_SONIC3K_23 = 73,
        MISSIONKIND_SONIC3K_24 = 74,
        MISSIONKIND_SONIC3K_25 = 75,
        MISSIONKIND_SONIC3K_END = 76,
        MISSIONKIND_SONICCD_START = 76,
        MISSIONKIND_SONICCD_1 = 76,
        MISSIONKIND_SONICCD_2 = 77,
        MISSIONKIND_SONICCD_3 = 78,
        MISSIONKIND_SONICCD_4 = 79,
        MISSIONKIND_SONICCD_5 = 80,
        MISSIONKIND_SONICCD_6 = 81,
        MISSIONKIND_SONICCD_7 = 82,
        MISSIONKIND_SONICCD_8 = 83,
        MISSIONKIND_SONICCD_9 = 84,
        MISSIONKIND_SONICCD_10 = 85,
        MISSIONKIND_SONICCD_11 = 86,
        MISSIONKIND_SONICCD_12 = 87,
        MISSIONKIND_SONICCD_13 = 88,
        MISSIONKIND_SONICCD_14 = 89,
        MISSIONKIND_SONICCD_15 = 90,
        MISSIONKIND_SONICCD_16 = 91,
        MISSIONKIND_SONICCD_17 = 92,
        MISSIONKIND_SONICCD_18 = 93,
        MISSIONKIND_SONICCD_19 = 94,
        MISSIONKIND_SONICCD_20 = 95,
        MISSIONKIND_SONICCD_21 = 96,
        MISSIONKIND_SONICCD_22 = 97,
        MISSIONKIND_SONICCD_23 = 98,
        MISSIONKIND_SONICCD_24 = 99,
        MISSIONKIND_SONICCD_25 = 100,
        MISSIONKIND_SONICCD_END = 101,
        MISSIONKIND_DLC_START = 101,
        MISSIONKIND_DLC_1 = 101,
        MISSIONKIND_DLC_2 = 102,
        MISSIONKIND_DLC_3 = 103,
        MISSIONKIND_DLC_4 = 104,
        MISSIONKIND_DLC_5 = 105,
        MISSIONKIND_DLC_6 = 106,
        MISSIONKIND_DLC_7 = 107,
        MISSIONKIND_DLC_8 = 108,
        MISSIONKIND_DLC_9 = 109,
        MISSIONKIND_DLC_10 = 110,
        MISSIONKIND_DLC_11 = 111,
        MISSIONKIND_DLC_END = 112,
        MISSIONKIND_NUM = 112,
        MISSIONKIND_SONIC1_NUM = 25,
        MISSIONKIND_SONIC2_NUM = 25,
        MISSIONKIND_SONIC3K_NUM = 25,
        MISSIONKIND_SONICCD_NUM = 25,
        MISSIONKIND_DLC_NUM = 11,
        MISSIONKIND_ALL_START = 1,
        MISSIONKIND_ALL_END = 112
    }

    [StructLayout(LayoutKind.Explicit, Size = 1796)]
    public struct MissionSaveData
    {
        [FieldOffset(0)]    public unsafe fixed byte /* MissionStageSaveData[112] */ _missionStages[1792];

        public unsafe MissionStageSaveData* missionStages
        {
            get
            {
                fixed (byte* p_missionStages = _missionStages)
                    return (MissionStageSaveData*)p_missionStages;
            }
        }

        [FieldOffset(1792)] public MissionKind lastPlayedMissionKind;
        [FieldOffset(1793)] public unsafe fixed byte dmy[3];
    }

    [StructLayout(LayoutKind.Explicit, Size = 8)]
    public struct ClearData
    {
        [FieldOffset(0)] public int clearTime;
        [FieldOffset(4)] public byte charaKind;
        [FieldOffset(5)] public bool cleared;
        [FieldOffset(6)] public bool displayed;
        [FieldOffset(7)] public bool uploaded;
    }

    [StructLayout(LayoutKind.Explicit, Size = 3592)]
    public struct StageClearData_VER_00_45
    {
        [FieldOffset(0)]    public unsafe fixed byte /* ClearData[441] */ _clearData[3528];

        public unsafe ClearData* clearData
        {
            get
            {
                fixed (byte* p_clearData = _clearData)
                    return (ClearData*)p_clearData;
            }
        }

        [FieldOffset(3528)] public unsafe fixed int bossRushSonicWork[4];
        [FieldOffset(3544)] public unsafe fixed int bossRushTailsWork[4];
        [FieldOffset(3560)] public unsafe fixed int bossRushKnucklesWork[4];
        [FieldOffset(3576)] public unsafe fixed int bossRushAmyWork[4];
    }

    [StructLayout(LayoutKind.Explicit, Size = 4)]
    public struct UnlockData
    {
        [FieldOffset(0)] public bool unlocked;
        [FieldOffset(1)] public bool unlockedInfo;
        [FieldOffset(2)] public bool displayed;
        [FieldOffset(3)] public byte dmy;
    }

    [StructLayout(LayoutKind.Explicit, Size = 4)]
    public struct PlayListItem
    {
        [FieldOffset(0)] public ushort musicKind;
        [FieldOffset(2)] public unsafe fixed byte reserved[2];
    }

    [StructLayout(LayoutKind.Explicit, Size = 1200)]
    public struct PlayListInfo
    {
        [FieldOffset(0)] public unsafe fixed byte /* PlayListItem[300] */ _items[1200];

        public unsafe PlayListItem* items
        {
            get
            {
                fixed (byte* p_items = _items)
                    return (PlayListItem*)p_items;
            }
        }
    }

    [StructLayout(LayoutKind.Explicit, Size = 8968)]
    public struct MuseumData
    {
        [FieldOffset(0)]    public byte artProgress;
        [FieldOffset(1)]    public byte movieProgress;
        [FieldOffset(2)]    public byte musicProgress;
        [FieldOffset(3)]    public byte museumChara;
        [FieldOffset(4)]    public byte movieSoundRegion;
        [FieldOffset(5)]    public unsafe fixed byte reserved[3];
        [FieldOffset(8)]    public unsafe fixed byte /* UnlockData[260] */ _artParam[1040];

        public unsafe UnlockData* artParam
        {
            get
            {
                fixed (byte* p_artParam = _artParam)
                    return (UnlockData*)p_artParam;
            }
        }

        [FieldOffset(1048)] public unsafe fixed byte /* UnlockData[60] */ _movieParam[240];

        public unsafe UnlockData* movieParam
        {
            get
            {
                fixed (byte* p_movieParam = _movieParam)
                    return (UnlockData*)p_movieParam;
            }
        }

        [FieldOffset(1288)] public unsafe fixed byte /* UnlockData[420] */ _musicParam[1680];

        public unsafe UnlockData* musicParam
        {
            get
            {
                fixed (byte* p_musicParam = _musicParam)
                    return (UnlockData*)p_musicParam;
            }
        }

        [FieldOffset(2968)] public unsafe fixed byte /* PlayListInfo[5] */ _musicPlayList[6000];

        public unsafe PlayListInfo* musicPlayList
        {
            get
            {
                fixed (byte* p_musicPlayList = _musicPlayList)
                    return (PlayListInfo*)p_musicPlayList;
            }
        }
    }

    [StructLayout(LayoutKind.Explicit, Size = 4)]
    public struct TutorialParam_VER_00_45
    {
        [FieldOffset(0)] public bool displayed;
        [FieldOffset(1)] public unsafe fixed byte reserved[3];
    }

    [StructLayout(LayoutKind.Explicit, Size = 256)]
    public struct TutorialData_VER_00_45
    {
        [FieldOffset(0)] public unsafe fixed byte /* TutorialParam_VER_00_45[64] */ __params[256];

        public unsafe TutorialParam_VER_00_45* _params
        {
            get
            {
                fixed (byte* p__params = __params)
                    return (TutorialParam_VER_00_45*)p__params;
            }
        }
    }

    [StructLayout(LayoutKind.Explicit, Size = 520)]
    public struct HoldValues_VER_00_45
    {
        [FieldOffset(0)] public unsafe fixed uint holdValue[130];
    }

    [StructLayout(LayoutKind.Explicit, Size = 133)]
    public struct SendFlags_VER_00_45
    {
        [FieldOffset(0)]   public unsafe fixed bool isSended[130];
        [FieldOffset(130)] public unsafe fixed byte reserved[3];
    }

    [StructLayout(LayoutKind.Explicit, Size = 35264)]
    public struct PlayReportData_VER_00_45
    {
        [FieldOffset(0)]     public unsafe fixed byte /* HoldValues_VER_00_45[54] */ _holdValues[28080];

        public unsafe HoldValues_VER_00_45* holdValues
        {
            get
            {
                fixed (byte* p_holdValues = _holdValues)
                    return (HoldValues_VER_00_45*)p_holdValues;
            }
        }

        [FieldOffset(28080)] public unsafe fixed byte /* SendFlags_VER_00_45[54] */ _sendFlags[7182];

        public unsafe SendFlags_VER_00_45* sendFlags
        {
            get
            {
                fixed (byte* p_sendFlags = _sendFlags)
                    return (SendFlags_VER_00_45*)p_sendFlags;
            }
        }
    }

    [StructLayout(LayoutKind.Explicit, Size = 260)]
    public struct ContentData
    {
        [FieldOffset(0)] public uint flags;
        [FieldOffset(4)] public int bonusCoinCount;
        [FieldOffset(8)] public unsafe fixed byte reserved[252];
    }

    [StructLayout(LayoutKind.Explicit, Size = 434176)]
    public struct GameGearBackupData
    {
        [FieldOffset(0)]      public ulong sonic1;
        [FieldOffset(25088)]  public ulong sonic2;
        [FieldOffset(50176)]  public ulong sonicTails;
        [FieldOffset(75264)]  public ulong sonicDrift;
        [FieldOffset(116736)] public ulong sonicSpin;
        [FieldOffset(141824)] public ulong sonicTails2;
        [FieldOffset(166912)] public ulong sonicDrift2;
        [FieldOffset(192000)] public ulong skyPatrol;
        [FieldOffset(217088)] public ulong tailsAdv;
        [FieldOffset(242176)] public ulong sonicLabyrinth;
        [FieldOffset(267264)] public ulong gSonic;
        [FieldOffset(292352)] public ulong eggMan;
        [FieldOffset(317440)] public ulong sonicTails_US;
        [FieldOffset(342528)] public ulong sonicTails2_US;
        [FieldOffset(367616)] public ulong tailsAdv_US;
        [FieldOffset(392704)] public ulong gSonic_US;
        [FieldOffset(417792)] public ulong sonicDriftSRAM;
    }

    [StructLayout(LayoutKind.Explicit, Size = 434184)]
    public struct GameGearData
    {
        [FieldOffset(0)] public uint playRomType;
        [FieldOffset(8)] public GameGearBackupData backupData;
    }

    [StructLayout(LayoutKind.Explicit, Size = 8)]
    public struct PlayReportQueueObject
    {
        [FieldOffset(0)] public ushort playreportIndex;
        [FieldOffset(2)] public ushort playreportSubIndex;
        [FieldOffset(4)] public int value;
    }

    [StructLayout(LayoutKind.Explicit, Size = 2052)]
    public struct PlayReportQueueData
    {
        [FieldOffset(0)] public short queuePointer;
        [FieldOffset(2)] public short queueStackPointer;
        [FieldOffset(4)] public unsafe fixed byte /* PlayReportQueueObject[256] */ _queue[2048];

        public unsafe PlayReportQueueObject* queue
        {
            get
            {
                fixed (byte* p_queue = _queue)
                    return (PlayReportQueueObject*)p_queue;
            }
        }
    }

    [StructLayout(LayoutKind.Explicit, Size = 8)]
    public struct PuzzleData
    {
        [FieldOffset(0)] public ushort pieceOpenFlags;
        [FieldOffset(2)] public ushort pieceShowFlags;
        [FieldOffset(4)] public bool completed;
        [FieldOffset(5)] public unsafe fixed byte padding[3];
    }

    [StructLayout(LayoutKind.Explicit, Size = 6430816)]
    public struct GameData_VER_00_45
    {
        [FieldOffset(0)]       public HeaderData header;
        [FieldOffset(60)]      public HeaderSubData headerSub;
        [FieldOffset(64)]      public GameModeData_VER_00_45 gameModeData;
        [FieldOffset(3606000)] public CollectionData collection;
        [FieldOffset(3606004)] public CheckPointSaveData_VER_00_45 checkPointSaveData;
        [FieldOffset(3617364)] public AnywareSaveData_VER_00_45 anywareSaveData;
        [FieldOffset(5943892)] public StatsContainerData stats;
        [FieldOffset(5944428)] public MissionSaveData mission;
        [FieldOffset(5946224)] public StageClearData_VER_00_45 stageClear;
        [FieldOffset(5949816)] public MuseumData museumData;
        [FieldOffset(5958784)] public TutorialData_VER_00_45 tutorialData;
        [FieldOffset(5959040)] public PlayReportData_VER_00_45 playreportData;
        [FieldOffset(5994304)] public ContentData contentData;
        [FieldOffset(5994568)] public GameGearData gamegearData;
        [FieldOffset(6428752)] public PlayReportQueueData playreportQueueData;
        [FieldOffset(6430804)] public PuzzleData puzzleData;
    }

}