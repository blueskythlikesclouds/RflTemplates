//----------------------------------------//
// This file was auto-generated by Skyth. //
//----------------------------------------//

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float initialSideSpeed;
	FSeek(p + 4);  float acceleSideForce;
	FSeek(p + 8);  float deceleSideForce;
	FSeek(p + 12); float maxSideSpeed;

	FSeek(p + 16);
} PlayerParamAutorun;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float speed;
	FSeek(p + 4);  float acceleForce;
	FSeek(p + 8);  float acceleSideForce;
	FSeek(p + 12); float deceleSideForce;
	FSeek(p + 16); float maxSideSpeed;
	FSeek(p + 20); float jumpHeight;
	FSeek(p + 24); float jumpSpeed;
	FSeek(p + 28); float jumpTime;
	FSeek(p + 32); float jumpAcceleSideForce;
	FSeek(p + 36); float jumpDeceleSideForce;
	FSeek(p + 40); float jumpMaxSideSpeed;
	FSeek(p + 44); float spinTime;
	FSeek(p + 48); int numSpin;
	FSeek(p + 52); float decreaseRate;
	FSeek(p + 56); float decreaseRateDamage;
	FSeek(p + 60); float increaseRateRing;
	FSeek(p + 64); float increaseRateRingWeak;
	FSeek(p + 68); float damageTime;
	FSeek(p + 72); float inletRadius;
	FSeek(p + 76); float weakSpeedRatio;
	FSeek(p + 80); float slowRate;
	FSeek(p + 84); float inputRangeBegin;
	FSeek(p + 88); float inputSuccessBegin;
	FSeek(p + 92); float inputSuccessEnd;
	FSeek(p + 96); float failedStumbleTime;

	FSeek(p + 100);
} PlayerParamDoubleBoost;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float frontAccel;
	FSeek(p + 4);  float frontBrake;
	FSeek(p + 8);  float sideBrake;
	FSeek(p + 12); float damageBrake;
	FSeek(p + 16); float damageSpeedReduceRate;
	FSeek(p + 20); float defaultRotateSpeed;
	FSeek(p + 24); float rotateSpeed;
	FSeek(p + 28); float rotateSpeedAir;
	FSeek(p + 32); float gravity;

	FSeek(p + 36);
} PlayerParamSlider;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float acceleForce;
	FSeek(p + 4);  float deceleForce;
	FSeek(p + 8);  float innerSideForce;
	FSeek(p + 12); float outerSideForce;
	FSeek(p + 16); float maxSideForce;
	FSeek(p + 20); float thresholdSpeed;

	FSeek(p + 24);
} PlayerParamWireDrift;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float resistRate;
	FSeek(p + 4);  float breatheBrake;
	FSeek(p + 8);  float breatheTime;
	FSeek(p + 12); float breatheGravity;

	FSeek(p + 16);
} PlayerParamWaterAct;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   PlayerParamAutorun autorun;
	FSeek(p + 16);  PlayerParamDoubleBoost doubleboost;
	FSeek(p + 116); PlayerParamSlider slider;
	FSeek(p + 152); PlayerParamWireDrift wiredrift;
	FSeek(p + 176); PlayerParamWaterAct wateract;

	FSeek(p + 192);
} CommonParameterPackage;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float noDamageTime;
	FSeek(p + 4);  float damagedInitialSpeed;
	FSeek(p + 8);  float upstandMaxSlope;
	FSeek(p + 12); float landingMaxSlope;
	FSeek(p + 16); float landingMaxSlopeOnMovable;
	FSeek(p + 20); float movableMaxSlope;
	FSeek(p + 24); float onewayFloorThroughSpeed;
	FSeek(p + 28); float projSpeedThreshold;

	FSeek(p + 32);
} PlayerParamCommon;

enum<byte> bool { False = 0, True = 1 };

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float maxSpeed;
	FSeek(p + 4);  float maxSpeedDash;
	FSeek(p + 8);  float maxSpeedOver;
	FSeek(p + 12); float maxSpeedAir;
	FSeek(p + 16); float maxRotateSpeed;
	FSeek(p + 20); float minRotateSpeed;
	FSeek(p + 24); float acceleForce;
	FSeek(p + 28); float dashAcceleForce;
	FSeek(p + 32); float autorunAcceleForce;
	FSeek(p + 36); float deceleForceLow;
	FSeek(p + 40); float dashDeceleForce;
	FSeek(p + 44); float deceleForceHigh;
	FSeek(p + 48); bool enabledTurnSlow;
	FSeek(p + 49); bool enabledSpeedSlow;
	FSeek(p + 52); float turnSlowTime;
	FSeek(p + 56); float turnSlowAngle;
	FSeek(p + 60); float turnSlowRatio;
	FSeek(p + 64); float slowTime;
	FSeek(p + 68); float acceleSlowTime;
	FSeek(p + 72); float maxFallSpeed;
	FSeek(p + 76); float landingDecele;
	FSeek(p + 80); float limitLandingDecele;
	FSeek(p + 84); float overSpeedDamperAir;

	FSeek(p + 88);
} PlayerParamSpeed;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float pitchRollSpeedMinDiff;
	FSeek(p + 4);  float pitchRollSpeedMaxDiff;
	FSeek(p + 8);  float pitchRollSpeedAirRate;
	FSeek(p + 12); float pitchRollSpeed;
	FSeek(p + 16); float toFrontRotation;

	FSeek(p + 20);
} PlayerParamRotation;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float speedMinJog;
	FSeek(p + 4);  float speedMinRun;
	FSeek(p + 8);  float speedMinJet;
	FSeek(p + 12); float animSpeedRate;
	FSeek(p + 16); float animSpeedMinJog;
	FSeek(p + 20); float followDelayTime;

	FSeek(p + 24);
} PlayerParamRunning;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float enableSpeed;
	FSeek(p + 4);  float initialSpeedRatio;
	FSeek(p + 8);  float maxSpeed;
	FSeek(p + 12); float forceLand;
	FSeek(p + 16); float forceAir;
	FSeek(p + 20); float forceRun;
	FSeek(p + 24); float endSpeed;
	FSeek(p + 28); float stopTime;
	FSeek(p + 32); float turnInitialSpeed;

	FSeek(p + 36);
} PlayerParamBrake;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float shortReleaseTime;
	FSeek(p + 4);  float longPressTime;
	FSeek(p + 8);  float addForceTime;
	FSeek(p + 12); float force;
	FSeek(p + 16); float addForce;
	FSeek(p + 20); float forceMin;
	FSeek(p + 24); float gravitySize;

	FSeek(p + 28);
} PlayerParamJump;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float acceleForce;
	FSeek(p + 4);  float deceleForce;
	FSeek(p + 8);  float brakeForce;
	FSeek(p + 12); float minSpeed;
	FSeek(p + 16); float limitMin;
	FSeek(p + 20); float limitMax;
	FSeek(p + 24); float limitUpSpeed;
	FSeek(p + 28); float airdragSpeed;

	FSeek(p + 32);
} PlayerParamJumpSpeed;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float initialSpeed;
	FSeek(p + 4); float limitSpeedMin;
	FSeek(p + 8); float limitSpeedMax;

	FSeek(p + 12);
} PlayerParamDoubleJump;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float minSpeed;
	FSeek(p + 4);  float deceleForce;
	FSeek(p + 8);  float thresholdLowSpeed;
	FSeek(p + 12); float rotationForceLow;
	FSeek(p + 16); float rotationVelocityForce;
	FSeek(p + 20); float rotationForceHigh;
	FSeek(p + 24); float rotationForceAutoRun;
	FSeek(p + 28); float movableMaxSlope;
	FSeek(p + 32); float gravitySize;
	FSeek(p + 36); float minContinueTime;
	FSeek(p + 40); float deceleRatioAutoRun;
	FSeek(p + 44); float maxAutoRunTime;

	FSeek(p + 48);
} PlayerParamSliding;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float initialSpeed;
	FSeek(p + 4);  float airDrag;
	FSeek(p + 8);  float thresholdSpeedAirDrag;
	FSeek(p + 12); float landingCancelTime;
	FSeek(p + 16); float runInitialSpeed;

	FSeek(p + 20);
} PlayerParamStomping;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float gravitySize;
	FSeek(p + 4);  float minTime;
	FSeek(p + 8);  float maxTime;
	FSeek(p + 12); float stopTime;
	FSeek(p + 16); float maxDownSpeed;
	FSeek(p + 20); float fallGroundDistance;
	FSeek(p + 24); float frontForce;
	FSeek(p + 28); float upForce;
	FSeek(p + 32); float impulseTime;

	FSeek(p + 36);
} PlayerParamWallJump;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float acceleForce;
	FSeek(p + 4);  float deceleForce;
	FSeek(p + 8);  float limitSpeedMin;
	FSeek(p + 12); float jumpSpeed;

	FSeek(p + 16);
} PlayerParamGrind;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float maxAcceleForce;
	FSeek(p + 4);  float acceleForce;
	FSeek(p + 8);  float maxSpeed;
	FSeek(p + 12); float brakeForce;
	FSeek(p + 16); float gravitySize;

	FSeek(p + 20);
} PlayerParamFallSlope;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float speed;

	FSeek(p + 4);
} PlayerParamWallRun;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float hangApproachSpeed;
	FSeek(p + 4); float hangApproachMinTime;
	FSeek(p + 8); float speed;

	FSeek(p + 12);
} PlayerParamClimbWall;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float initialFrontSpeed;
	FSeek(p + 4);  float initialUpSpeed;
	FSeek(p + 8);  float initialDashSpeed;
	FSeek(p + 12); float initialDashBrake;

	FSeek(p + 16);
} PlayerParamCancelStep;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float jumpForce;
	FSeek(p + 4);  float jumpAddForce;
	FSeek(p + 8);  float addTime;
	FSeek(p + 12); float acceleForce;
	FSeek(p + 16); float deceleForce;
	FSeek(p + 20); float brakeForce;
	FSeek(p + 24); float limitSpeedMin;
	FSeek(p + 28); float limitSpeedMax;

	FSeek(p + 32);
} PlayerParamSpinAttack;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float speed;
	FSeek(p + 4);  float bounceVertSpeed;
	FSeek(p + 8);  float bounceHorzSpeed;
	FSeek(p + 12); float powerCurveSonic;
	FSeek(p + 16); float powerCurve;
	FSeek(p + 20); float powerEdge;
	FSeek(p + 24); float powerQuick;
	FSeek(p + 28); float fallHomingEnableUpSpeed;
	FSeek(p + 32); float attackDownTime;
	FSeek(p + 36); float enableHomingTime;

	FSeek(p + 40);
} PlayerParamHomingAttack;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float decreaseFirst;
	FSeek(p + 4);  float decreaseRate;
	FSeek(p + 8);  float initialSpeed;
	FSeek(p + 12); float maxSpeed;
	FSeek(p + 16); float maxSpeedAir;
	FSeek(p + 20); float acceleForce;
	FSeek(p + 24); float acceleSideForce;
	FSeek(p + 28); float rotationForce;
	FSeek(p + 32); float maxUpAngle;
	FSeek(p + 36); float time;
	FSeek(p + 40); float continueTime;
	FSeek(p + 44); float cancelSpeed;

	FSeek(p + 48);
} PlayerParamBoost;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float acceleForce;
	FSeek(p + 4);  float acceleSideForce;
	FSeek(p + 8);  float stepInitialSpeed;
	FSeek(p + 12); float avoidForce;

	FSeek(p + 16);
} PlayerParamQuickStep;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float maxVertSpeed;
	FSeek(p + 4);  float acceleVertForce;
	FSeek(p + 8);  float maxHorzSpeed;
	FSeek(p + 12); float acceleHorzForce;

	FSeek(p + 16);
} SpeedParam;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  SpeedParam normal;
	FSeek(p + 16); SpeedParam fast;
	FSeek(p + 32); SpeedParam damaged;
	FSeek(p + 48); float deceleVertForce;
	FSeek(p + 52); float deceleHorzForce;
	FSeek(p + 56); float deceleNeutralForce;
	FSeek(p + 60); float damageTime;

	FSeek(p + 64);
} PlayerParamDiving;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float shootSpeed;
	FSeek(p + 4); float speed;

	FSeek(p + 8);
} PlayerParamWire;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float shootSpeed;
	FSeek(p + 4);  float speed;
	FSeek(p + 8);  float maxSpeed;
	FSeek(p + 12); float bounceForce;
	FSeek(p + 16); float deceleSideForce;
	FSeek(p + 20); float waitTime;

	FSeek(p + 24);
} PlayerParamWireBoost;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  int numRotate;
	FSeek(p + 4);  float rotateTime;
	FSeek(p + 8);  float beginAngle;
	FSeek(p + 12); float endAngle;
	FSeek(p + 16); float damageRate;

	FSeek(p + 20);
} PlayerParamWeaponBurst;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float maxSpeed;
	FSeek(p + 4);  float slidePower;
	FSeek(p + 8);  float brakeForce;
	FSeek(p + 12); float slidePowerSlalom;
	FSeek(p + 16); float brakeForceSlalom;
	FSeek(p + 20); float releaseSpeed;

	FSeek(p + 24);
} PlayerParamBallMove;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float acceleForce;
	FSeek(p + 4);  float deceleForce;
	FSeek(p + 8);  float gravityRate;
	FSeek(p + 12); float releaseSpeed;

	FSeek(p + 16);
} PlayerParamPinBall;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float maxDistance;
	FSeek(p + 4);  float baseSpeed;
	FSeek(p + 8);  float addSpeed;
	FSeek(p + 12); int maxNumCharges;
	FSeek(p + 16); float acceleForce;
	FSeek(p + 20); float acceleSideForce;
	FSeek(p + 24); float deceleForce;
	FSeek(p + 28); float keepTime;
	FSeek(p + 32); float homingAngle;
	FSeek(p + 36); float homingDistance;

	FSeek(p + 40);
} PlayerParamSpinDash;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float danperV;
	FSeek(p + 4);  float danperH;
	FSeek(p + 8);  float accelRate;
	FSeek(p + 12); float moveForce;
	FSeek(p + 16); float jumpCheckSpeed;

	FSeek(p + 20);
} PlayerParamFan;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   PlayerParamCommon common;
	FSeek(p + 32);  PlayerParamSpeed speed;
	FSeek(p + 120); PlayerParamRotation rotation;
	FSeek(p + 140); PlayerParamRunning running;
	FSeek(p + 164); PlayerParamBrake brake;
	FSeek(p + 200); PlayerParamJump jump;
	FSeek(p + 228); PlayerParamJumpSpeed jumpSpeed;
	FSeek(p + 260); PlayerParamDoubleJump doubleJump;
	FSeek(p + 272); PlayerParamSliding sliding;
	FSeek(p + 320); PlayerParamStomping stomping;
	FSeek(p + 340); PlayerParamWallJump walljump;
	FSeek(p + 376); PlayerParamGrind grind;
	FSeek(p + 392); PlayerParamFallSlope fallSlope;
	FSeek(p + 412); PlayerParamWallRun wallRun;
	FSeek(p + 416); PlayerParamClimbWall climbWall;
	FSeek(p + 428); PlayerParamCancelStep cancelStep;
	FSeek(p + 444); PlayerParamSpinAttack spinAttack;
	FSeek(p + 476); PlayerParamHomingAttack homingAttack;
	FSeek(p + 516); PlayerParamBoost boost;
	FSeek(p + 564); PlayerParamQuickStep quickstep;
	FSeek(p + 580); PlayerParamDiving diving;
	FSeek(p + 644); PlayerParamWire wire;
	FSeek(p + 652); PlayerParamWireBoost wireboost;
	FSeek(p + 676); PlayerParamWeaponBurst weaponburst;
	FSeek(p + 696); PlayerParamBallMove ballmove;
	FSeek(p + 720); PlayerParamPinBall pinball;
	FSeek(p + 736); PlayerParamSpinDash spindash;
	FSeek(p + 776); PlayerParamFan fan;

	FSeek(p + 796);
} ParameterPackage;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);    CommonParameterPackage common;
	FSeek(p + 192);  ParameterPackage forwardView;
	FSeek(p + 988);  ParameterPackage sideView;
	FSeek(p + 1784); ParameterPackage forwardViewWater;
	FSeek(p + 2580); ParameterPackage sideViewWater;

	FSeek(p + 3376);
} PlayerParameters;

FSeek(0x40);
PlayerParameters data;