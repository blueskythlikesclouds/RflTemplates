//----------------------------------------//
// This file was auto-generated by Skyth. //
//----------------------------------------//

typedef struct {
	local uint64 p<hidden=true> = FTell();


	FSeek(p + 8);
} SystemData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); uint totalTime;
	FSeek(p + 4); ubyte lastPlayStageNo;
	FSeek(p + 5); ubyte lastPlayStageNoShadowDLC;
	FSeek(p + 6); ubyte padding[2]<optimize=false>;

	FSeek(p + 8);
} GameInfoData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  ubyte byteFlags[16]<optimize=false>;
	FSeek(p + 16); uint bitFlags[64]<optimize=false>;

	FSeek(p + 272);
} FlagSetData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); uint bitFlags[256]<optimize=false>;

	FSeek(p + 1024);
} CustomizeFlagSetData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); uint bitFlags[128]<optimize=false>;

	FSeek(p + 512);
} MissionFlagSetData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); ushort sosMissionClearCount;

	FSeek(p + 2);
} ChallengeMissionData;

enum<byte> bool { False = 0, True = 1 };

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  int missionID[3]<optimize=false>;
	FSeek(p + 12); bool cleared[3]<optimize=false>;
	FSeek(p + 15); bool watchedCrearWindow[3]<optimize=false>;
	FSeek(p + 24); uint bonusIndex[3]<optimize=false>;
	FSeek(p + 36); uint missionStartTime;
	FSeek(p + 40); uint bonusStartTime;
	FSeek(p + 44); bool bonusStarted;
	FSeek(p + 48); float bonusValue;
	FSeek(p + 18); bool watchedNew[3]<optimize=false>;

	FSeek(p + 52);
} DailyMissionData;

enum<byte> SexType {
	MALE    = 0,
	FEMALE  = 1,
	NUM_SEX = 2,
};

enum<byte> RaceType {
	DOG       = 0,
	WOLF      = 1,
	RABBIT    = 2,
	BEAR      = 3,
	CAT       = 4,
	BIRD      = 5,
	HEDGEHOG  = 6,
	NUM_RACES = 7,
};

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  SexType sex;
	FSeek(p + 1);  RaceType race;
	FSeek(p + 2);  ubyte rank;
	FSeek(p + 3);  ubyte gadgetNo;
	FSeek(p + 4);  ubyte head;
	FSeek(p + 5);  ubyte eye;
	FSeek(p + 6);  ubyte voice;
	FSeek(p + 7);  ubyte baseColor;
	FSeek(p + 8);  ubyte skinColor;
	FSeek(p + 9);  ubyte beakColor;
	FSeek(p + 10); ubyte eyeColor;
	FSeek(p + 11); ubyte headPart;
	FSeek(p + 12); ubyte glassPart;
	FSeek(p + 13); ubyte facePart;
	FSeek(p + 14); ubyte glovePart;
	FSeek(p + 15); ubyte shoesPart;
	FSeek(p + 16); ubyte bodyPart;
	FSeek(p + 17); ubyte suitNo;
	FSeek(p + 18); ubyte innerColor;
	FSeek(p + 19); ubyte resultMotionNo;
	FSeek(p + 20); uint experiencePoint;

	FSeek(p + 24);
} CustomizeData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); ubyte dummy;
	FSeek(p + 1); ubyte pad[3]<optimize=false>;
	FSeek(p + 4); CustomizeData customizeData;

	FSeek(p + 28);
} NetBuddyData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  byte rank;
	FSeek(p + 1);  ubyte correct;
	FSeek(p + 2);  ushort flags;
	FSeek(p + 4);  uint score;
	FSeek(p + 8);  uint allTime;
	FSeek(p + 12); NetBuddyData myBuddy;
	FSeek(p + 40); NetBuddyData rentalBuddy;

	FSeek(p + 68);
} ActStageData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); ActStageData actStages[70]<optimize=false>;

	FSeek(p + 4760);
} AllStageData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); CustomizeData customize;

	FSeek(p + 24);
} BuddyData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); bool registered;
	FSeek(p + 4); CustomizeData customize;

	FSeek(p + 28);
} ClosetData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); ubyte level;
	FSeek(p + 4); uint experiencePoint;

	FSeek(p + 8);
} RaceData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   BuddyData buddy[15]<optimize=false>;
	FSeek(p + 360); ClosetData closet[15]<optimize=false>;
	FSeek(p + 780); RaceData race[7]<optimize=false>;
	FSeek(p + 836); uint activeBuddyIndex;
	FSeek(p + 840); uint entryBuddyCount;

	FSeek(p + 844);
} AllBuddyData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); ubyte data[16]<optimize=false>;

	FSeek(p + 16);
} PlatformData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   byte name[80]<optimize=false>;
	FSeek(p + 80);  ushort country;
	FSeek(p + 82);  ubyte padding[2]<optimize=false>;
	FSeek(p + 84);  NetBuddyData buddyData;
	FSeek(p + 112); PlatformData platformData;

	FSeek(p + 128);
} FriendData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   FriendData selectedFriend;
	FSeek(p + 128); FriendData stockedFriends[31]<optimize=false>;

	FSeek(p + 4096);
} AllFriendData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); int value;
	FSeek(p + 4); bool assigned;

	FSeek(p + 8);
} StatValue;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); StatValue stats[3393]<optimize=false>;

	FSeek(p + 27144);
} StatsContainerData;

enum<byte> VoiceLanguageType {
	VOICE_LANGUAGE_ENGLISH  = 0,
	VOICE_LANGUAGE_FRENCH   = 1,
	VOICE_LANGUAGE_ITALIAN  = 2,
	VOICE_LANGUAGE_GERMAN   = 3,
	VOICE_LANGUAGE_SPANISH  = 4,
	VOICE_LANGUAGE_JAPANESE = 5,
	NUM_VOICE_LANGUAGES     = 6,
};

enum<byte> LanguageType {
	LANGUAGE_ENGLISH    = 0,
	LANGUAGE_FRENCH     = 1,
	LANGUAGE_ITALIAN    = 2,
	LANGUAGE_GERMAN     = 3,
	LANGUAGE_SPANISH    = 4,
	LANGUAGE_POLISH     = 5,
	LANGUAGE_RUSSIAN    = 6,
	LANGUAGE_JAPANESE   = 7,
	LANGUAGE_ZHONGWEN   = 8,
	LANGUAGE_KOREAN     = 9,
	LANGUAGE_ZHONGWEN_S = 10,
	NUM_LANGUAGES       = 11,
};

enum<byte> DifficultyType {
	DIFFICULTY_NORMAL = 0,
	DIFFICULTY_EASY   = 1,
	NUM_DIFFICULTIES  = 2,
};

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); int m_simpleInputID;
	FSeek(p + 4); int m_eKeysButtonIDs[2]<optimize=false>;

	FSeek(p + 12);
} KeybindingInfo;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); KeybindingInfo m_keybindings[12]<optimize=false>;

	FSeek(p + 144);
} KeybindingData;

enum<byte> AudioOutput {
	Mono      = 0,
	Stereo    = 1,
	FivePOne  = 2,
	SevenPOne = 3,
	NrOutputs = 4,
};

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float m_masterVolume;
	FSeek(p + 4);  float m_movieVolume;
	FSeek(p + 8);  float m_voiceVolume;
	FSeek(p + 12); float m_musicVolume;
	FSeek(p + 16); float m_sfxVolume;
	FSeek(p + 20); AudioOutput m_outputChannels;
	FSeek(p + 24); uint m_outputAdapterIndex;

	FSeek(p + 28);
} AudioSettingsData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   VoiceLanguageType speech;
	FSeek(p + 1);   LanguageType text;
	FSeek(p + 2);   DifficultyType difficulty;
	FSeek(p + 3);   byte m_vibrationIndex;
	FSeek(p + 4);   DifficultyType difficultyDLC;
	FSeek(p + 8);   uint flags;
	FSeek(p + 12);  KeybindingData m_keybindings;
	FSeek(p + 156); AudioSettingsData m_audio;

	FSeek(p + 184);
} ConfigInfoData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);     GameInfoData info;
	FSeek(p + 8);     FlagSetData flagSet;
	FSeek(p + 280);   CustomizeFlagSetData customizeFlagSet;
	FSeek(p + 1304);  MissionFlagSetData missionFlagSet;
	FSeek(p + 1816);  ChallengeMissionData chalengeMission;
	FSeek(p + 1820);  DailyMissionData dailyMission;
	FSeek(p + 1872);  AllStageData stages;
	FSeek(p + 6632);  AllBuddyData buddies;
	FSeek(p + 7476);  AllFriendData friends;
	FSeek(p + 11572); StatsContainerData statsContainer;
	FSeek(p + 38716); ConfigInfoData configInfo;

	FSeek(p + 38900);
} GameData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); SystemData system;
	FSeek(p + 8); GameData game;

	FSeek(p + 38908);
} SaveDataType;

FSeek(0x40);
SaveDataType data;