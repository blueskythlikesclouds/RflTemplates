//----------------------------------------//
// This file was auto-generated by Skyth. //
//----------------------------------------//

typedef struct {
	uint64 offset<hidden=true>;
	uint64 padding<hidden=true>;
} StringPtr<read=StringRead>;

string StringRead(StringPtr &ptr) {
	if (ptr.offset > 0) {
		return ReadString(ptr.offset + 0x40);
	}
	return "";
}

enum<byte> bool { False = 0, True = 1 };

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  bool enable;
	FSeek(p + 4);  float gravity;
	FSeek(p + 8);  float resist;
	FSeek(p + 12); float resist_decay;
	FSeek(p + 16); float recover;
	FSeek(p + 20); float recover_decay;
	FSeek(p + 24); float spring;
	FSeek(p + 28); float radius;
	FSeek(p + 32); float transmit;
	FSeek(p + 36); float inertia;
	FSeek(p + 40); float angle_limit;
	FSeek(p + 48); StringPtr nodeName;

	FSeek(p + 64);
} SwayParamNode;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  StringPtr idName;
	FSeek(p + 16); SwayParamNode nodeParam[16]<optimize=false>;

	FSeek(p + 1040);
} SwayParamIndivisual;

FSeek(0x40);
SwayParamIndivisual data;