//----------------------------------------//
// This file was auto-generated by Skyth. //
//----------------------------------------//

typedef struct {
	uint64 offset<hidden=true>;
	uint64 padding<hidden=true>;
} StringPtr<read=StringRead>;

string StringRead(StringPtr &ptr) {
	if (ptr.offset > 0) {
		return ReadString(ptr.offset + 0x40);
	}
	return "";
}

typedef struct { float x; float y; float z; float w<hidden=true>; } Vector3;

enum<byte> bool { False = 0, True = 1 };

enum<byte> ShapeType {
	SHAPE_BOX      = 0,
	SHAPE_SPHERE   = 1,
	SHAPE_CYLINDER = 2,
	SHAPE_MESH     = 3,
	SHAPE_NONE     = 4,
};

enum<byte> RigidBodyType {
	RIGID_BODY_NONE    = 0,
	RIGID_BODY_STATIC  = 1,
	RIGID_BODY_DYNAMIC = 2,
};

enum<byte> RigidBodyMaterial {
	RIGID_BODY_MAT_NONE = 0,
	RIGID_BODY_MAT_WOOD = 1,
	RIGID_BODY_MAT_IRON = 2,
	NUM_RIGID_BODY_MATS = 3,
};

enum<byte> ContactDamageType {
	CONTACT_DAMAGE_NONE         = 0,
	CONTACT_DAMAGE_LOW_SPEED    = 1,
	CONTACT_DAMAGE_MIDDLE_SPEED = 2,
	CONTACT_DAMAGE_HIGH_SPEED   = 3,
};

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float mass;
	FSeek(p + 4);  float friction;
	FSeek(p + 8);  float gravityFactor;
	FSeek(p + 12); float restitution;
	FSeek(p + 16); float linearDamping;
	FSeek(p + 20); float angularDamping;
	FSeek(p + 24); float maxLinearVelocity;

	FSeek(p + 28);
} PhysicsParam;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  StringPtr motionName;
	FSeek(p + 16); bool syncFrame;
	FSeek(p + 17); bool stopEndFrame;

	FSeek(p + 24);
} MotionData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   StringPtr texSrtAnimName0;
	FSeek(p + 16);  StringPtr texSrtAnimName1;
	FSeek(p + 32);  StringPtr texSrtAnimName2;
	FSeek(p + 48);  StringPtr texPatAnimName0;
	FSeek(p + 64);  StringPtr texPatAnimName1;
	FSeek(p + 80);  StringPtr texPatAnimName2;
	FSeek(p + 96);  StringPtr matAnimName0;
	FSeek(p + 112); StringPtr matAnimName1;
	FSeek(p + 128); StringPtr matAnimName2;

	FSeek(p + 144);
} MirageAnimData;

enum<byte> MotionType {
	MOTION_SWING        = 0,
	MOTION_ROTATE       = 1,
	MOTION_LINEAR_SWING = 2,
};

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  MotionType motionType;
	FSeek(p + 16); Vector3 axis;
	FSeek(p + 32); float power;
	FSeek(p + 36); float speedScale;
	FSeek(p + 40); float time;

	FSeek(p + 48);
} ProgramMotionData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  StringPtr effectName;
	FSeek(p + 16); bool linkMotionStop;

	FSeek(p + 24);
} EffectData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); StringPtr cueName;

	FSeek(p + 16);
} SoundData;

enum<byte> KillType {
	KILL_TYPE_NOT_KILL = 0,
	KILL_TYPE_KILL     = 1,
	KILL_TYPE_BREAK    = 2,
	KILL_TYPE_MOTION   = 3,
};

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float gravity;
	FSeek(p + 4);  float lifeTime;
	FSeek(p + 8);  float mass;
	FSeek(p + 12); float explosionScale;
	FSeek(p + 16); float impulseScale;

	FSeek(p + 20);
} DebrisData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  KillType killType;
	FSeek(p + 4);  float killTime;
	FSeek(p + 8);  StringPtr breakMotionName;
	FSeek(p + 24); DebrisData debrisData;

	FSeek(p + 48);
} KillData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   MotionData motionData;
	FSeek(p + 24);  MirageAnimData mirageAnimData;
	FSeek(p + 176); ProgramMotionData programMotionData;
	FSeek(p + 224); EffectData effectData;
	FSeek(p + 248); SoundData soundData;
	FSeek(p + 264); KillData killData;

	FSeek(p + 320);
} ReactionData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);    float rangeIn;
	FSeek(p + 4);    float rangeDistance;
	FSeek(p + 8);    StringPtr modelName;
	FSeek(p + 24);   StringPtr skeltonName;
	FSeek(p + 40);   ShapeType shape;
	FSeek(p + 44);   float width;
	FSeek(p + 48);   float height;
	FSeek(p + 52);   float depth;
	FSeek(p + 56);   StringPtr meshName;
	FSeek(p + 80);   Vector3 shapeOffset;
	FSeek(p + 96);   float shapeSizeOffset;
	FSeek(p + 100);  RigidBodyType rigidBodyType;
	FSeek(p + 101);  RigidBodyMaterial rigidBodyMaterial;
	FSeek(p + 104);  PhysicsParam physicsParam;
	FSeek(p + 132);  ContactDamageType contactDamageType;
	FSeek(p + 133);  bool rideOnDamage;
	FSeek(p + 134);  bool aerialBounce;
	FSeek(p + 144);  ReactionData reactionIdle;
	FSeek(p + 464);  ReactionData reactionEnter;
	FSeek(p + 784);  ReactionData reactionLeave;
	FSeek(p + 1104); ReactionData reactionStay;
	FSeek(p + 1424); ReactionData reactionStayMove;
	FSeek(p + 1744); ReactionData reactionDamage;

	FSeek(p + 2064);
} ConfigData;

FSeek(0x40);
ConfigData data;