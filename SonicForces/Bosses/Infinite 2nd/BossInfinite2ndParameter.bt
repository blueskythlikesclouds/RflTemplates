//----------------------------------------//
// This file was auto-generated by Skyth. //
//----------------------------------------//

enum<byte> bool { False = 0, True = 1 };

typedef struct { float x; float y; float z; float w<hidden=true>; } Vector3;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   float modelScale;
	FSeek(p + 4);   float hp;
	FSeek(p + 8);   float height;
	FSeek(p + 12);  float noticeTime;
	FSeek(p + 16);  float moveSpeed;
	FSeek(p + 20);  float moveStartDistance;
	FSeek(p + 24);  float moveDistance;
	FSeek(p + 28);  float attackInterval;
	FSeek(p + 32);  bool countWhileVirtron;
	FSeek(p + 36);  float damageTime;
	FSeek(p + 40);  float damagePoint;
	FSeek(p + 44);  float criticalDamagePoint;
	FSeek(p + 48);  float gadgetDamageWaitTime;
	FSeek(p + 52);  float asteroidDamage;
	FSeek(p + 56);  float drillDamage;
	FSeek(p + 60);  float cubeDamage;
	FSeek(p + 64);  float lightningDamage;
	FSeek(p + 68);  float burstDamage;
	FSeek(p + 72);  float hoverDamage;
	FSeek(p + 76);  float voidDamage;
	FSeek(p + 80);  float powerUpTime;
	FSeek(p + 84);  float moveSpeedUpRate;
	FSeek(p + 88);  float DefenceUpRate;
	FSeek(p + 92);  float chargeSpeed;
	FSeek(p + 96);  float chargeAffterWaitTime;
	FSeek(p + 100); float chargeAffterRiseTime;
	FSeek(p + 104); float chargeSpeed2;
	FSeek(p + 108); float charge2ndWaitTime;
	FSeek(p + 112); float chargeAffterWaitTime2;
	FSeek(p + 116); float chargeAffterRiseTime2;
	FSeek(p + 120); float toBackSpeed;
	FSeek(p + 128); Vector3 pillarStartPos;
	FSeek(p + 144); float pillarHeight;
	FSeek(p + 148); float pillarDepth;
	FSeek(p + 152); float pillarNoticeTime;
	FSeek(p + 156); float pillarRiseTime;
	FSeek(p + 160); float pillarLifeTime;
	FSeek(p + 164); float pillarEndTime;
	FSeek(p + 176); Vector3 pillarStartPos2;
	FSeek(p + 192); float pillarHeight2;
	FSeek(p + 196); float pillarDepth2;
	FSeek(p + 200); float pillarNoticeTime2;
	FSeek(p + 204); float pillarRiseTime2;
	FSeek(p + 208); float pillarLifeTime2;
	FSeek(p + 212); float pillarEndTime2;
	FSeek(p + 216); float beamRadius;
	FSeek(p + 220); float beamSpeed;
	FSeek(p + 224); float beamRotateMax;
	FSeek(p + 228); float beamLifeTime;
	FSeek(p + 232); float beamTailLifeTime;
	FSeek(p + 240); Vector3 beamStartPos[8]<optimize=false>;
	FSeek(p + 368); float beamMoveStartTime;
	FSeek(p + 372); float beamEndTime;
	FSeek(p + 376); float beamRadius2;
	FSeek(p + 380); float beamSpeed2;
	FSeek(p + 384); float beamRotateMax2;
	FSeek(p + 388); float beamLifeTime2;
	FSeek(p + 392); float beamTailLifeTime2;
	FSeek(p + 400); Vector3 beamStartPos2[8]<optimize=false>;
	FSeek(p + 528); float beamMoveStartTime2;
	FSeek(p + 532); float beamEndTime2;
	FSeek(p + 536); float virtualRealityTime;

	FSeek(p + 544);
} BossInfinite2ndParameter;

FSeek(0x40);
BossInfinite2ndParameter data;