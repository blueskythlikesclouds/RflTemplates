//----------------------------------------//
// This file was auto-generated by Skyth. //
//----------------------------------------//

enum<byte> bool { False = 0, True = 1 };

typedef struct { float x; float y; float z; float w<hidden=true>; } Vector3;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  bool IsCameraView;
	FSeek(p + 4);  float fovy;
	FSeek(p + 8);  float distance;
	FSeek(p + 12); float elevationOffsetDeg;
	FSeek(p + 16); float gravityOffset;
	FSeek(p + 32); Vector3 playerOffset;

	FSeek(p + 48);
} ObjCameraVerticalSpawner;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float fovy;
	FSeek(p + 4);  float minDistanceToTarget;
	FSeek(p + 8);  float minDistanceToPlayer;
	FSeek(p + 16); Vector3 targetOffset;
	FSeek(p + 32); Vector3 playerOffset;
	FSeek(p + 48); float azimuthOffset;
	FSeek(p + 52); float elevationOffset;
	FSeek(p + 56); float easeTimeEnter;
	FSeek(p + 60); float easeTimeLeave;

	FSeek(p + 64);
} BossLockonCameraParameter;

enum<byte> QueenActionType {
	QUEEN_ACTION_LASER     = 0,
	QUEEN_ACTION_MOVE_AWAY = 1,
};

enum<byte> ObjectType {
	OBJ_NONE            = 0,
	OBJ_NEXT            = 1,
	OBJ_BEETON          = 2,
	OBJ_IDLE_BEETON     = 3,
	OBJ_CHARGE_BEETON   = 4,
	OBJ_H_CHARGE_BEETON = 5,
	OBJ_RING            = 6,
	OBJ_SUPERRING       = 7,
};

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float timing;
	FSeek(p + 4); ObjectType objectType;
	FSeek(p + 6); short placeId;

	FSeek(p + 8);
} BeehiveSummonParam;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); QueenActionType queenActionType;
	FSeek(p + 4); BeehiveSummonParam params[20]<optimize=false>;

	FSeek(p + 164);
} BeehiveSummonTable;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);    bool battleCheck;
	FSeek(p + 1);    bool debugDraw;
	FSeek(p + 2);    bool bodyAttack;
	FSeek(p + 3);    bool beetonInducedExplosion;
	FSeek(p + 4);    bool laserTargetMove;
	FSeek(p + 8);    float laserTargetSpeed;
	FSeek(p + 12);   int maxHealthPoint;
	FSeek(p + 16);   int berserkHealthPoint;
	FSeek(p + 20);   float speed;
	FSeek(p + 24);   float angularSpeed;
	FSeek(p + 28);   float height;
	FSeek(p + 32);   float maxAngle;
	FSeek(p + 36);   float floorEdgeOffset;
	FSeek(p + 40);   float roundTime;
	FSeek(p + 44);   float laserHeight;
	FSeek(p + 48);   float laserVisualRadius;
	FSeek(p + 52);   float laserHitRadius;
	FSeek(p + 56);   float laserNoticeTime;
	FSeek(p + 60);   float laserIrradiateTime;
	FSeek(p + 64);   float laserIrradiateEndTime;
	FSeek(p + 68);   float laserAngularSpeed;
	FSeek(p + 72);   float kamikazeHeight;
	FSeek(p + 76);   float summonHeight;
	FSeek(p + 80);   float chainHomingTime;
	FSeek(p + 84);   float chainHomingSlowSpeed;
	FSeek(p + 88);   float chainHomingAttackSlowSpeed;
	FSeek(p + 92);   float chargeAngularSpeed;
	FSeek(p + 96);   float chargeWaitTime;
	FSeek(p + 100);  float chargeHeight;
	FSeek(p + 104);  float chargeSpeed;
	FSeek(p + 108);  float chargeHitSphereRadius;
	FSeek(p + 112);  Vector3 chargeHitSphereOffset;
	FSeek(p + 128);  float meteorHomingTime;
	FSeek(p + 132);  float meteorHomingSpeed;
	FSeek(p + 136);  float meteorHomingAccele;
	FSeek(p + 140);  float meteorHomingDeceleDist;
	FSeek(p + 144);  float meteorSpeed;
	FSeek(p + 148);  float sonicJumpUpVelocity;
	FSeek(p + 160);  Vector3 sonicBoundVelocity;
	FSeek(p + 176);  float zavokHitStopTime;
	FSeek(p + 180);  float zavokHitGameSpeed;
	FSeek(p + 184);  float stickTime;
	FSeek(p + 192);  ObjCameraVerticalSpawner stickCameraParam;
	FSeek(p + 240);  BossLockonCameraParameter lockonCameraParam;
	FSeek(p + 304);  BossLockonCameraParameter chainHomingCameraParam;
	FSeek(p + 368);  bool useDummyTable;
	FSeek(p + 372);  float dummyInterval;
	FSeek(p + 376);  int dummyNumBeetons;
	FSeek(p + 380);  int dummyNumSuperRing;
	FSeek(p + 384);  int numSummonTables;
	FSeek(p + 388);  BeehiveSummonTable summonTables[10]<optimize=false>;
	FSeek(p + 2028); int numBerserkSummonTables;
	FSeek(p + 2032); BeehiveSummonTable berserkSummonTables[10]<optimize=false>;

	FSeek(p + 3680);
} BossQueenBeetonParameter;

FSeek(0x40);
BossQueenBeetonParameter data;