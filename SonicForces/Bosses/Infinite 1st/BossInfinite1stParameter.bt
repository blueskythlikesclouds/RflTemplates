//----------------------------------------//
// This file was auto-generated by Skyth. //
//----------------------------------------//

typedef struct { float x; float y; float z; float w<hidden=true>; } Vector3;

enum<byte> bool { False = 0, True = 1 };

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float fovy;
	FSeek(p + 4);  float minDistanceToTarget;
	FSeek(p + 8);  float minDistanceToPlayer;
	FSeek(p + 16); Vector3 targetOffset;
	FSeek(p + 32); Vector3 playerOffset;
	FSeek(p + 48); float easeTimeEnter;
	FSeek(p + 52); float easeTimeLeave;

	FSeek(p + 64);
} InfiniteHomingCameraParameter;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); Vector3 pos;

	FSeek(p + 16);
} InfiniteCopyParameter;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   float modelScale;
	FSeek(p + 4);   float hp;
	FSeek(p + 8);   float startRageModeHp;
	FSeek(p + 12);  float snakeDamage;
	FSeek(p + 16);  float skyDamage;
	FSeek(p + 20);  float height;
	FSeek(p + 24);  float maxDistance;
	FSeek(p + 28);  float minDistance;
	FSeek(p + 32);  float playerAutoRunSpeed;
	FSeek(p + 36);  float speed;
	FSeek(p + 40);  float boostSpeed;
	FSeek(p + 44);  float homingSpeed;
	FSeek(p + 48);  float rollSpeed;
	FSeek(p + 52);  float distanceResetTime;
	FSeek(p + 56);  float backTime;
	FSeek(p + 60);  float attackInterval;
	FSeek(p + 64);  float slowmotionRate;
	FSeek(p + 68);  float slowmotionTime;
	FSeek(p + 72);  float damageTime;
	FSeek(p + 76);  float homingDistance;
	FSeek(p + 80);  float homingAngle;
	FSeek(p + 96);  InfiniteHomingCameraParameter homingCameraParam;
	FSeek(p + 160); float homingSlowmotionRate;
	FSeek(p + 164); float virtualRealityTime;
	FSeek(p + 168); float pipeRadius;
	FSeek(p + 172); float pipeLength;
	FSeek(p + 176); float pipeStartDistance;
	FSeek(p + 180); float pipeSpeed;
	FSeek(p + 184); int pipeNum;
	FSeek(p + 188); float pipeIntervalDistance;
	FSeek(p + 192); float pipeNoticeTime;
	FSeek(p + 196); float pipeWaitTime;
	FSeek(p + 200); float pipeRadius2;
	FSeek(p + 204); float pipeLength2;
	FSeek(p + 208); float pipeStartDistance2;
	FSeek(p + 212); float pipeSpeed2;
	FSeek(p + 216); int pipeNum2;
	FSeek(p + 220); float pipeIntervalDistance2;
	FSeek(p + 224); float pipeNoticeTime2;
	FSeek(p + 228); float pipeWaitTime2;
	FSeek(p + 232); float twistRadius;
	FSeek(p + 236); float twistLength;
	FSeek(p + 240); float twistStartDistance;
	FSeek(p + 244); float twistSpeed;
	FSeek(p + 248); float twistAngle;
	FSeek(p + 252); float twistRotateSpeed;
	FSeek(p + 256); float twistHitRadius;
	FSeek(p + 260); float twistNoticeTime;
	FSeek(p + 264); float twistWaitTime;
	FSeek(p + 268); float twistRadius2;
	FSeek(p + 272); float twistLength2;
	FSeek(p + 276); float twistStartDistance2;
	FSeek(p + 280); float twistSpeed2;
	FSeek(p + 284); float twistAngle2;
	FSeek(p + 288); float twistRotateSpeed2;
	FSeek(p + 292); float twistHitRadius2;
	FSeek(p + 296); float twistNoticeTime2;
	FSeek(p + 300); float twistWaitTime2;
	FSeek(p + 304); Vector3 rectangleExtents;
	FSeek(p + 320); float rectangleStartDistance;
	FSeek(p + 324); float rectangleSpeed;
	FSeek(p + 328); float rectangleAngle;
	FSeek(p + 332); float rectangleRotateSpeed;
	FSeek(p + 336); float rectangleHitSize;
	FSeek(p + 340); int rectangleNum;
	FSeek(p + 344); float rectangleIntervalDistance;
	FSeek(p + 348); float rectangleNoticeTime;
	FSeek(p + 352); float rectangleWaitTime;
	FSeek(p + 368); Vector3 rectangleExtents2;
	FSeek(p + 384); float rectangleStartDistance2;
	FSeek(p + 388); float rectangleSpeed2;
	FSeek(p + 392); float rectangleAngle2;
	FSeek(p + 396); float rectangleRotateSpeed2;
	FSeek(p + 400); float rectangleHitSize2;
	FSeek(p + 404); int rectangleNum2;
	FSeek(p + 408); float rectangleIntervalDistance2;
	FSeek(p + 412); float rectangleNoticeTime2;
	FSeek(p + 416); float rectangleWaitTime2;
	FSeek(p + 432); Vector3 closeExtents;
	FSeek(p + 448); float closeRadius;
	FSeek(p + 452); float closeStartDistance;
	FSeek(p + 456); float closeStartAngle;
	FSeek(p + 460); float closeAppearTime;
	FSeek(p + 464); float closeTime;
	FSeek(p + 468); float closeNoticeTime;
	FSeek(p + 472); float closeWaitTime;
	FSeek(p + 480); Vector3 closeExtents2;
	FSeek(p + 496); float closeRadius2;
	FSeek(p + 500); float closeStartDistance2;
	FSeek(p + 504); float closeStartAngle2;
	FSeek(p + 508); float closeAppearTime2;
	FSeek(p + 512); float closeTime2;
	FSeek(p + 516); float closeNoticeTime2;
	FSeek(p + 520); float closeWaitTime2;
	FSeek(p + 524); float runStartPathDistance;
	FSeek(p + 528); float jumpStartPathDistance;
	FSeek(p + 532); float jumpWaitTime;
	FSeek(p + 536); float jumpSpeed;
	FSeek(p + 540); float jumpOutOfControl;
	FSeek(p + 544); float jumpkeepVelocityTime;
	FSeek(p + 548); bool jumpTargetAirPath;
	FSeek(p + 560); Vector3 jumpTargetPos;
	FSeek(p + 576); float jumpWaitTime2;
	FSeek(p + 580); float jumpSpeed2;
	FSeek(p + 584); float jumpOutOfControl2;
	FSeek(p + 588); float jumpkeepVelocityTime2;
	FSeek(p + 592); bool jumpTargetAirPath2;
	FSeek(p + 608); Vector3 jumpTargetPos2;
	FSeek(p + 624); float skyPathAdvanceSpeed;
	FSeek(p + 628); float skyDamageKnockBack;
	FSeek(p + 632); float skyDamageKnockBackTime;
	FSeek(p + 636); float skyDeadKnockBack;
	FSeek(p + 640); float skyDeadKnockBackTime;
	FSeek(p + 644); float noiseCycleMax;
	FSeek(p + 648); float noiseCycleMin;
	FSeek(p + 652); float copyDeadExplosinTime;
	FSeek(p + 656); float copyDeadExplosinSpeed;
	FSeek(p + 660); uint copyNum;
	FSeek(p + 664); uint copyNum2;
	FSeek(p + 672); InfiniteCopyParameter copyList[30]<optimize=false>;

	FSeek(p + 1152);
} BossInfinite1stParameter;

FSeek(0x40);
BossInfinite1stParameter data;