//----------------------------------------//
// This file was auto-generated by Skyth. //
//----------------------------------------//

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  int lifepoint;
	FSeek(p + 4);  int angryLifepoint;
	FSeek(p + 8);  float shieldpoint;
	FSeek(p + 12); float ableToHomingDistance;
	FSeek(p + 16); float entryDistance;
	FSeek(p + 20); float modelHeightOffset;
	FSeek(p + 24); float modelScale;

	FSeek(p + 28);
} Infinite3rdParamCommon;

enum<byte> bool { False = 0, True = 1 };

enum<byte> ActionType {
	ACT_FLY      = 0,
	ACT_KEEPAWAY = 1,
	ACT_SPAWN    = 2,
	ACT_SHIELD   = 3,
	ACT_ELECTLIC = 4,
	ACT_DASH     = 5,
	ACT_LOOP     = 6,
};

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  ActionType action;
	FSeek(p + 1);  bool beforeKeepAway;
	FSeek(p + 4);  float keepAwayDistance;
	FSeek(p + 8);  float keepAwayAccele;
	FSeek(p + 12); float actionTime;

	FSeek(p + 16);
} Infinite3rdParamSeqUnit;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   Infinite3rdParamSeqUnit before[10]<optimize=false>;
	FSeek(p + 160); Infinite3rdParamSeqUnit after[10]<optimize=false>;

	FSeek(p + 320);
} Infinite3rdParamSeq;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float baseMinDistance;
	FSeek(p + 4);  float baseMaxDistance;
	FSeek(p + 8);  float approachSpeed;
	FSeek(p + 12); float approachRatio;
	FSeek(p + 16); float homingApproachRatio;
	FSeek(p + 20); float awaySpeed;
	FSeek(p + 24); float awayRatio;

	FSeek(p + 28);
} Infinite3rdParamChase;

enum<byte> SpawnType {
	SPAWN_PAWN       = 0,
	SPAWN_RING       = 1,
	SPAWN_WHITE_WISP = 2,
	SPAWN_COLOR_WISP = 3,
};

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  SpawnType type;
	FSeek(p + 4);  float distance;
	FSeek(p + 8);  int numSpawns;
	FSeek(p + 12); int numRows;
	FSeek(p + 16); float sideOffset;
	FSeek(p + 20); float distanceSpan;
	FSeek(p + 24); float rowSpan;

	FSeek(p + 28);
} Infinite3rdParamSpawnType;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   Infinite3rdParamChase chase;
	FSeek(p + 28);  Infinite3rdParamSpawnType types0[10]<optimize=false>;
	FSeek(p + 308); Infinite3rdParamSpawnType high0[10]<optimize=false>;
	FSeek(p + 588); float distance;
	FSeek(p + 592); float spawnDistance;
	FSeek(p + 596); float despawnDistance;
	FSeek(p + 600); bool useAsteroid;
	FSeek(p + 601); bool useLightning;
	FSeek(p + 602); bool useCube;
	FSeek(p + 603); bool useDrill;
	FSeek(p + 604); bool useBurst;
	FSeek(p + 605); bool useVoid;
	FSeek(p + 606); bool useHover;

	FSeek(p + 608);
} Infinite3rdParamSpawn;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float openedDistance;
	FSeek(p + 4);  int numShields;
	FSeek(p + 8);  int numRings;
	FSeek(p + 12); float radiusAppear;
	FSeek(p + 16); float radiusMin;
	FSeek(p + 20); float radiusSpan;
	FSeek(p + 24); float angularSpeed;
	FSeek(p + 28); float idleTime;
	FSeek(p + 32); float heightOffset;
	FSeek(p + 36); float tiltBase;
	FSeek(p + 40); float tiltSpan;

	FSeek(p + 44);
} Infinite3rdParamShieldType;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   Infinite3rdParamChase beforeChase;
	FSeek(p + 28);  Infinite3rdParamChase afterChase;
	FSeek(p + 56);  Infinite3rdParamShieldType normal;
	FSeek(p + 100); Infinite3rdParamShieldType high;

	FSeek(p + 144);
} Infinite3rdParamShield;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float distance;
	FSeek(p + 4);  int numRows;
	FSeek(p + 8);  float rowSpan;
	FSeek(p + 12); float sideOffset;
	FSeek(p + 16); float heightOffset;
	FSeek(p + 20); float avoidOffset;
	FSeek(p + 24); float startAngle;
	FSeek(p + 28); float rotSpeedMax;

	FSeek(p + 32);
} Infinite3rdParamCrossType;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float speedMax;
	FSeek(p + 4);  float accele;
	FSeek(p + 8);  float decele;
	FSeek(p + 12); float startDistance;
	FSeek(p + 16); float marginDistance;
	FSeek(p + 20); float angleSpeedMin;

	FSeek(p + 24);
} Infinite3rdParamAvoid;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   Infinite3rdParamChase beforeChase;
	FSeek(p + 28);  Infinite3rdParamChase afterChase;
	FSeek(p + 56);  float radius;
	FSeek(p + 60);  float height;
	FSeek(p + 64);  float attackDistance;
	FSeek(p + 68);  float createTime;
	FSeek(p + 72);  float chargeTime;
	FSeek(p + 76);  float releaseTime;
	FSeek(p + 80);  float chargeRadius;
	FSeek(p + 84);  float releaseRatio;
	FSeek(p + 88);  float awayDistance;
	FSeek(p + 92);  Infinite3rdParamCrossType normal0[10]<optimize=false>;
	FSeek(p + 412); Infinite3rdParamCrossType high0[10]<optimize=false>;
	FSeek(p + 732); Infinite3rdParamAvoid avoid;

	FSeek(p + 756);
} Infinite3rdParamCross;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float waitRandomTime;
	FSeek(p + 4);  float apartTime;
	FSeek(p + 8);  float apartSpeed;
	FSeek(p + 12); float apartRotateSpeed;
	FSeek(p + 16); float scaleDownTime;
	FSeek(p + 20); float scaleUpTime;
	FSeek(p + 24); float gatherTime;

	FSeek(p + 28);
} Infinite3rdParamAvoidEvnet;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float endWait;
	FSeek(p + 4);  float endWarpWait;
	FSeek(p + 8);  float affterDistance;
	FSeek(p + 12); float waitTime;
	FSeek(p + 16); float followMaxSpeed;
	FSeek(p + 20); float speed;
	FSeek(p + 24); float endDistance;
	FSeek(p + 28); float colWidth;
	FSeek(p + 32); float colLength;
	FSeek(p + 36); float colHeight;
	FSeek(p + 40); float colSpeed;
	FSeek(p + 44); float effPlaySpeed;
	FSeek(p + 48); float heightOffset;

	FSeek(p + 52);
} Infinite3rdParamDashAtack;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  Infinite3rdParamChase chase;
	FSeek(p + 28); float homingDamagePoint;
	FSeek(p + 32); float boostDamagePoint;
	FSeek(p + 36); float spinDamagePoint;
	FSeek(p + 40); float asteroidDamage;
	FSeek(p + 44); float drillDamage;
	FSeek(p + 48); float cubeDamage;
	FSeek(p + 52); float lightningDamage;
	FSeek(p + 56); float burstDamage;
	FSeek(p + 60); float hoverDamage;
	FSeek(p + 64); float asteroidCounter;
	FSeek(p + 68); float drillCounter;
	FSeek(p + 72); float cubeCounter;
	FSeek(p + 76); float lightningCounter;
	FSeek(p + 80); float burstCounter;
	FSeek(p + 84); float damageIntervalTime;
	FSeek(p + 88); uint homingDamageLimit;
	FSeek(p + 92); float damageTime;

	FSeek(p + 96);
} Infinite3rdParamDamage;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float easeTimeEnter;
	FSeek(p + 4);  float easeTimeLeave;
	FSeek(p + 8);  float slowRatioShield;
	FSeek(p + 12); float slowTimeShield;
	FSeek(p + 16); float slowRatioDamage;
	FSeek(p + 20); float slowTimeDamage;
	FSeek(p + 24); float slowRatioCounter;
	FSeek(p + 28); float slowTimeCounter;
	FSeek(p + 32); float slowRatioFinish;
	FSeek(p + 36); float slowTimeFinish;

	FSeek(p + 40);
} Infinite3rdParamDamageCamera;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float changeStateTime;
	FSeek(p + 4);  float endDistance;
	FSeek(p + 8);  float threatenWarpDistance;
	FSeek(p + 12); float startTime;
	FSeek(p + 16); float waitTime;
	FSeek(p + 20); float endTime;
	FSeek(p + 24); float width;
	FSeek(p + 28); float height;
	FSeek(p + 32); int warpNum;
	FSeek(p + 36); bool isThreaten;

	FSeek(p + 40);
} Infinite3rdParmaWarp;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float waitTime;
	FSeek(p + 4);  float waitRandomTime;
	FSeek(p + 8);  float rotateTime;
	FSeek(p + 12); float backTime;
	FSeek(p + 16); float rotateSpeed;
	FSeek(p + 20); float radiusMax;
	FSeek(p + 24); float scaleUpTime;
	FSeek(p + 28); float boostSpeed;

	FSeek(p + 32);
} Infinite3rdParamEntryEvnet;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float time;
	FSeek(p + 4);  float magnitude;
	FSeek(p + 8);  int freq;
	FSeek(p + 12); float attenRatio;

	FSeek(p + 16);
} Infinite3rdParamCameraShakeBoost;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float playerSpeed;

	FSeek(p + 4);
} Infinite3rdDoubleBoostParameter;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float time;

	FSeek(p + 4);
} Infinite3rdParamVirtualReality;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);    Infinite3rdParamCommon common;
	FSeek(p + 28);   Infinite3rdParamSeq seq;
	FSeek(p + 348);  Infinite3rdParamChase chase;
	FSeek(p + 376);  Infinite3rdParamSpawn spawn;
	FSeek(p + 984);  Infinite3rdParamShield shield;
	FSeek(p + 1128); Infinite3rdParamCross cross;
	FSeek(p + 1884); Infinite3rdParamAvoidEvnet avoid;
	FSeek(p + 1912); Infinite3rdParamDashAtack dashattack;
	FSeek(p + 1964); Infinite3rdParamDamage damage;
	FSeek(p + 2060); Infinite3rdParamDamageCamera damageCamera;
	FSeek(p + 2100); Infinite3rdParmaWarp warp;
	FSeek(p + 2140); Infinite3rdParamEntryEvnet entryEvent;
	FSeek(p + 2172); Infinite3rdParamCameraShakeBoost cameraShakeBoost;
	FSeek(p + 2188); Infinite3rdDoubleBoostParameter doubleboost;
	FSeek(p + 2192); Infinite3rdParamVirtualReality virtualReality;

	FSeek(p + 2196);
} BossInfinite3rdParameter;

FSeek(0x40);
BossInfinite3rdParameter data;