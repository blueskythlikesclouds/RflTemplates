//----------------------------------------//
// This file was auto-generated by Skyth. //
//----------------------------------------//

enum<byte> bool { False = 0, True = 1 };

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   bool battleCheck;
	FSeek(p + 4);   int maxHealthPoint;
	FSeek(p + 8);   int berserkHealthPoint;
	FSeek(p + 12);  int turnCount;
	FSeek(p + 16);  int turnCountBerserk;
	FSeek(p + 20);  float turnStartupTime;
	FSeek(p + 24);  float turnTime;
	FSeek(p + 28);  float maxTurnDistance;
	FSeek(p + 32);  float punchChargeTime;
	FSeek(p + 36);  float punchChargeTimeBerserk;
	FSeek(p + 40);  float punchTurnSpeed;
	FSeek(p + 44);  float punchTurnSpeedBerserk;
	FSeek(p + 48);  bool startupPunchIfNear;
	FSeek(p + 49);  bool startupPunchIfNearBerserk;
	FSeek(p + 52);  float punchMinChargeTime;
	FSeek(p + 56);  float punchMinChargeTimeBerserk;
	FSeek(p + 60);  float punchStartupTime;
	FSeek(p + 64);  float punchStartupTimeBerserk;
	FSeek(p + 68);  float punchActiveTime;
	FSeek(p + 72);  float punchActiveTimeBerserk;
	FSeek(p + 76);  float punchRecoveryTime;
	FSeek(p + 80);  float punchRecoveryTimeBerserk;
	FSeek(p + 84);  float punchHitSphereRadius;
	FSeek(p + 88);  bool generateQuakeByPunch;
	FSeek(p + 89);  bool generateQuakeByPunchBerserk;
	FSeek(p + 92);  float beamStartupTime;
	FSeek(p + 96);  float beamStartupTimeBerserk;
	FSeek(p + 100); float beamActiveTime;
	FSeek(p + 104); float beamActiveTimeBerserk;
	FSeek(p + 108); float beamHitSphereRadius;

	FSeek(p + 112);
} BossBigZavokParameter;

FSeek(0x40);
BossBigZavokParameter data;