//----------------------------------------//
// This file was auto-generated by Skyth. //
//----------------------------------------//

typedef struct { float x; float y; float z; float w<hidden=true>; } Vector3;

enum<byte> bool { False = 0, True = 1 };

enum<byte> DebrisType {
	DPT_NONE = 0,
	DPT_WISP = 1,
	DPT_RING = 2,
};

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); DebrisType type;
	FSeek(p + 4); float offsetDistance;

	FSeek(p + 8);
} DebrisBlock;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  DebrisBlock debrisParam[5]<optimize=false>;
	FSeek(p + 40); float delay;
	FSeek(p + 44); bool isUse;
	FSeek(p + 45); bool isInit;

	FSeek(p + 48);
} DebrisBlockPattern;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   uint singleHAMax;
	FSeek(p + 4);   uint singleHADamage;
	FSeek(p + 8);   uint trioHADamage;
	FSeek(p + 12);  float haSlowmotionRate;
	FSeek(p + 16);  float haDamageSlowmotionRate;
	FSeek(p + 20);  float haDamageSlowmotionDelay;
	FSeek(p + 24);  float haDamageSlowmotionLastDelay;
	FSeek(p + 28);  float haCameraChangeDelay;
	FSeek(p + 32);  float haCameraChangeLastDelay;
	FSeek(p + 36);  float toBossDistanceMin;
	FSeek(p + 40);  float toBossDistanceMax;
	FSeek(p + 44);  float homingArea;
	FSeek(p + 48);  float lastTBArea;
	FSeek(p + 52);  float assumedSpeedLow;
	FSeek(p + 56);  float assumedSpeedMiddle;
	FSeek(p + 60);  float assumedSpeedHi;
	FSeek(p + 64);  float increaseDistanceSpeed;
	FSeek(p + 68);  float shortenDistanceSpeed;
	FSeek(p + 72);  float piyoriTime;
	FSeek(p + 80);  Vector3 cameraOffset;
	FSeek(p + 96);  Vector3 cameraOffsetHA;
	FSeek(p + 112); DebrisBlockPattern debrisPatternList[10]<optimize=false>;

	FSeek(p + 592);
} StageParam;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float aimTime;
	FSeek(p + 4);  float reAimTime;
	FSeek(p + 8);  float aimParam;
	FSeek(p + 12); float moveSpeed;
	FSeek(p + 16); uint attackNum;
	FSeek(p + 20); float approachBonusRate;
	FSeek(p + 24); float approachBonusStartDelay;
	FSeek(p + 28); float approachBonusChangeUpSpeed;
	FSeek(p + 32); float approachBonusChangeDownSpeed;

	FSeek(p + 36);
} RocketAttackLvPattern;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float changeDelay;
	FSeek(p + 4); RocketAttackLvPattern rocketPattern[3]<optimize=false>;

	FSeek(p + 112);
} RocketParam;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  uint attackNum;
	FSeek(p + 4);  float motionSpeedRate;
	FSeek(p + 8);  float approachBonusRate;
	FSeek(p + 12); float approachBonusChangeUpSpeed;
	FSeek(p + 16); float approachBonusChangeDownSpeed;

	FSeek(p + 20);
} LaserAttackLvPattern;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float changeDelay;
	FSeek(p + 4); LaserAttackLvPattern laserPattern[3]<optimize=false>;

	FSeek(p + 64);
} LaserParam;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  uint attackLine;
	FSeek(p + 4);  float moveAreaWidth;
	FSeek(p + 8);  float cycleDistance;
	FSeek(p + 12); float createDelay;
	FSeek(p + 16); float attackWait;
	FSeek(p + 20); float endDelay;
	FSeek(p + 24); float approachBonusRate;
	FSeek(p + 28); float approachBonusStartDelay;
	FSeek(p + 32); float approachBonusTime;
	FSeek(p + 36); float approachBonusChangeUpSpeed;
	FSeek(p + 40); float approachBonusChangeDownSpeed;

	FSeek(p + 44);
} PillarAttackLvPattern;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); PillarAttackLvPattern pillerPattern[3]<optimize=false>;

	FSeek(p + 132);
} PillarParam;

enum<byte> StatePatternType {
	SPT_NONE     = 0,
	SPT_ROCKET   = 1,
	SPT_LASER_L  = 2,
	SPT_LASER_R  = 3,
	SPT_PILLAR_0 = 4,
	SPT_PILLAR_1 = 5,
	SPT_PILLAR_2 = 6,
};

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); StatePatternType stateType;
	FSeek(p + 4); int nextStateInedx;
	FSeek(p + 8); int changeNextStateInedx;

	FSeek(p + 12);
} StateParam;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   float boosAttackLv2HpRate;
	FSeek(p + 4);   float boosAttackLv3HpRate;
	FSeek(p + 8);   RocketParam rocketParam;
	FSeek(p + 120); LaserParam laserParam;
	FSeek(p + 184); PillarParam pillarParam;
	FSeek(p + 316); StateParam statePatternList[16]<optimize=false>;

	FSeek(p + 508);
} AttackParam;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   uint battleHealthPoint;
	FSeek(p + 4);   float boosHpGaugeTime;
	FSeek(p + 16);  StageParam stageParam;
	FSeek(p + 608); AttackParam attackParam;

	FSeek(p + 1120);
} BossFinalDeathEggRoboLastParameter;

FSeek(0x40);
BossFinalDeathEggRoboLastParameter data;