//----------------------------------------//
// This file was auto-generated by Skyth. //
//----------------------------------------//

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float homingDamage;
	FSeek(p + 4);  float boostDamage;
	FSeek(p + 8);  float spinDamage;
	FSeek(p + 12); float fatalDamage;
	FSeek(p + 16); float etcDamage;

	FSeek(p + 20);
} FDENormalDamageParameter;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float asteroidDamage;
	FSeek(p + 4);  float drillDamage;
	FSeek(p + 8);  float cubeDamage;
	FSeek(p + 12); float lightningDamage;
	FSeek(p + 16); float burstDamage;
	FSeek(p + 20); float voidDamage;
	FSeek(p + 24); float hoverDamage;

	FSeek(p + 28);
} FDEGadgetDamageParameter;

enum<byte> bool { False = 0, True = 1 };

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); uint shotNum;
	FSeek(p + 4); float shotAngle;
	FSeek(p + 8); float shotTime;

	FSeek(p + 12);
} FDE1stLaserPattern;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); FDE1stLaserPattern laserPattern[3]<optimize=false>;

	FSeek(p + 36);
} FDE1stLaser;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  uint shotNum;
	FSeek(p + 4);  float shotAnimRate;
	FSeek(p + 8);  float speed;
	FSeek(p + 12); float homingParam;
	FSeek(p + 16); float homingLimitDistance;

	FSeek(p + 20);
} FDE1stMissilePattern;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); FDE1stMissilePattern missilePattern[3]<optimize=false>;

	FSeek(p + 60);
} FDE1stMissile;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  uint debrisNum;
	FSeek(p + 4);  bool isUse;
	FSeek(p + 8);  float addDistance;
	FSeek(p + 12); float throwingTime;
	FSeek(p + 16); float hitPathHeight;
	FSeek(p + 20); float topHeight;
	FSeek(p + 24); float topPoint;

	FSeek(p + 28);
} FDE1stDebrisWave;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); FDE1stDebrisWave debrisWave[3]<optimize=false>;

	FSeek(p + 84);
} FDE1stDebrisPattern;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); FDE1stDebrisPattern debrisPattern[3]<optimize=false>;

	FSeek(p + 252);
} FDE1stDebris;

enum<byte> FDE1stStatePatternType {
	SPT_1ST_NONE    = 0,
	SPT_1ST_LASER   = 1,
	SPT_1ST_MISSILE = 2,
	SPT_1ST_DBRIS   = 3,
};

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); FDE1stStatePatternType stateType;
	FSeek(p + 4); int nextStateInedx;
	FSeek(p + 8); int damageNextStateInedx;

	FSeek(p + 12);
} FDE1stState;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   float boosAttackLv2HpRate;
	FSeek(p + 4);   float boosAttackLv3HpRate;
	FSeek(p + 8);   FDE1stLaser laserParam;
	FSeek(p + 44);  FDE1stMissile missileParam;
	FSeek(p + 104); FDE1stDebris debrisParam;
	FSeek(p + 356); bool isAutoDebris;
	FSeek(p + 360); FDE1stState statePatternList[16]<optimize=false>;

	FSeek(p + 552);
} FDE1st;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float readyTimeR;
	FSeek(p + 4);  float readyTimeL;
	FSeek(p + 8);  float delayR;
	FSeek(p + 12); float delayL;
	FSeek(p + 16); float invisibleWaveRadius;
	FSeek(p + 20); float invisibleWaveSpeed;
	FSeek(p + 24); float waveRadiusMin;
	FSeek(p + 28); float waveRadiusMax;
	FSeek(p + 32); float waveDamageRadius;
	FSeek(p + 36); float waveSpeed;
	FSeek(p + 40); float waveAddSpeed;
	FSeek(p + 44); uint waveNum;
	FSeek(p + 48); uint attackNumLv1R;
	FSeek(p + 52); uint attackNumLv2R;
	FSeek(p + 56); uint attackNumLv3R;
	FSeek(p + 60); uint attackNumLv1L;
	FSeek(p + 64); uint attackNumLv2L;
	FSeek(p + 68); uint attackNumLv3L;

	FSeek(p + 72);
} FDE2ndImpact;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float shotTime;
	FSeek(p + 4); float readyTime;
	FSeek(p + 8); uint attackNum;

	FSeek(p + 12);
} FDE2ndLaserAttackLvPattern;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); FDE2ndLaserAttackLvPattern laserPattern[3]<optimize=false>;

	FSeek(p + 36);
} FDE2ndLaser;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  uint shotNum;
	FSeek(p + 4);  uint attackNum;
	FSeek(p + 8);  float speed;
	FSeek(p + 12); float homingParam;
	FSeek(p + 16); float homingLimitDistance;
	FSeek(p + 20); float shotAnimRate;

	FSeek(p + 24);
} FDE2ndMissileAttackLvPattern;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); FDE2ndMissileAttackLvPattern missilePattern[3]<optimize=false>;

	FSeek(p + 72);
} FDE2ndMissile;

enum<byte> FDE2ndStatePatternType {
	SPT_2ND_NONE     = 0,
	SPT_2ND_MISSILE  = 1,
	SPT_2ND_LASER    = 2,
	SPT_2ND_IMPACT   = 3,
	SPT_2ND_IMPACT_R = 4,
};

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  FDE2ndStatePatternType stateType;
	FSeek(p + 4);  int nextStateInedx;
	FSeek(p + 8);  int damageNextStateInedx;
	FSeek(p + 12); bool isEnemySpawn;

	FSeek(p + 16);
} FDE2ndState;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   float boosAttackLv2HpRate;
	FSeek(p + 4);   float boosAttackLv3HpRate;
	FSeek(p + 8);   FDE2ndImpact impactParam;
	FSeek(p + 80);  FDE2ndLaser laserParam;
	FSeek(p + 116); FDE2ndMissile missileParam;
	FSeek(p + 188); FDE2ndState statePatternList[16]<optimize=false>;

	FSeek(p + 444);
} FDE2nd;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   uint battle1stHealthPoint;
	FSeek(p + 4);   uint battle2ndHealthPoint;
	FSeek(p + 8);   float boosHpGaugeTime1st;
	FSeek(p + 12);  float boosHpGaugeTime2nd;
	FSeek(p + 16);  FDENormalDamageParameter normalDamageParam;
	FSeek(p + 36);  FDENormalDamageParameter normalArmDamageParam;
	FSeek(p + 56);  FDEGadgetDamageParameter gadgetDamageParam;
	FSeek(p + 84);  FDEGadgetDamageParameter gadgetArmDamageParam;
	FSeek(p + 112); FDE1st battle1stParam;
	FSeek(p + 664); FDE2nd battle2ndParam;

	FSeek(p + 1108);
} BossFinalDeathEggRoboParameter;

FSeek(0x40);
BossFinalDeathEggRoboParameter data;