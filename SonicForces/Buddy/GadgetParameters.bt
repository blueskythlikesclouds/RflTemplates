//----------------------------------------//
// This file was auto-generated by Skyth. //
//----------------------------------------//

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); int startType;

	FSeek(p + 4);
} GadgetCommonParameter;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float continueTime;
	FSeek(p + 4);  float speedFV;
	FSeek(p + 8);  float distanceFV;
	FSeek(p + 12); float intervalFV;
	FSeek(p + 16); float speedSV;
	FSeek(p + 20); float distanceSV;
	FSeek(p + 24); float intervalSV;

	FSeek(p + 28);
} GadgetBurstNormal;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float decreaseTime;
	FSeek(p + 4);  float outOfControlTime;
	FSeek(p + 8);  float thresholdInput;
	FSeek(p + 12); float initialSpeedFV;
	FSeek(p + 16); float launchAngleFV;
	FSeek(p + 20); float initialSpeedSV;
	FSeek(p + 24); float launchAngleSV;

	FSeek(p + 28);
} GadgetBurstSpecial;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float activeTime;
	FSeek(p + 4);  float decreaseTime;
	FSeek(p + 8);  GadgetBurstNormal normal;
	FSeek(p + 36); GadgetBurstSpecial special;

	FSeek(p + 64);
} GadgetBurstParameter;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float decreaseTime;
	FSeek(p + 4);  float moveTimeFV;
	FSeek(p + 8);  float moveTimeSV;
	FSeek(p + 12); float initialSpeedFV;
	FSeek(p + 16); float initialSpeedSV;
	FSeek(p + 20); int maxChains;
	FSeek(p + 24); int maxChainsAir;
	FSeek(p + 28); float motionSpeedRatio;
	FSeek(p + 32); float edgeStopTime;

	FSeek(p + 36);
} GadgetLightningNormal;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float decreaseTime;
	FSeek(p + 4);  float chargeTime;
	FSeek(p + 8);  float searchRadiusFV;
	FSeek(p + 12); float searchRadiusSV;
	FSeek(p + 16); float searchRadPlayerFV;
	FSeek(p + 20); float searchRadPlayerSV;
	FSeek(p + 24); float searchRadiusEnemyFV;
	FSeek(p + 28); float searchRadiusEnemySV;
	FSeek(p + 32); float searchRadiusItemFV;
	FSeek(p + 36); float searchRadiusItemSV;
	FSeek(p + 40); float electroSpeed;
	FSeek(p + 44); float moveSpeedFV;
	FSeek(p + 48); float moveSpeedSV;
	FSeek(p + 52); float launchSpeedFV;
	FSeek(p + 56); float launchSpeedSV;
	FSeek(p + 60); float launchTimeFV;
	FSeek(p + 64); float launchTimeSV;
	FSeek(p + 68); float adjustDistanceFV;
	FSeek(p + 72); float adjustDistanceSV;
	FSeek(p + 76); float chainAngleEnemyFV;
	FSeek(p + 80); float chainAngleEnemySV;
	FSeek(p + 84); float chainAngleFV;
	FSeek(p + 88); float chainAngleSV;

	FSeek(p + 92);
} GadgetLightningCharge;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float activeTime;
	FSeek(p + 4);  float decreaseTime;
	FSeek(p + 8);  GadgetLightningNormal normal;
	FSeek(p + 44); GadgetLightningCharge charge;

	FSeek(p + 136);
} GadgetLightningParameter;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float decreaseTime;
	FSeek(p + 4);  float startBurstRadiusFV;
	FSeek(p + 8);  float startBurstRadiusSV;
	FSeek(p + 12); float maxBurstRadiusFV;
	FSeek(p + 16); float maxBurstRadiusSV;
	FSeek(p + 20); float burstSpeedFV;
	FSeek(p + 24); float burstSpeedSV;
	FSeek(p + 28); float motionSpeed;

	FSeek(p + 32);
} GadgetCubeNormal;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float decreaseTime;
	FSeek(p + 4);  float createCubeSizeFV;
	FSeek(p + 8);  float createCubeSizeSV;
	FSeek(p + 12); float createCubeLimitFV;
	FSeek(p + 16); float createCubeLimitSV;
	FSeek(p + 20); float spAttackFlameFV;
	FSeek(p + 24); float spAttackFlameSV;
	FSeek(p + 28); float spChargeFlame1FV;
	FSeek(p + 32); float spChargeFlame1SV;
	FSeek(p + 36); float spChargeFlame2FV;
	FSeek(p + 40); float spChargeFlame2SV;
	FSeek(p + 44); int spCubeNum0FV;
	FSeek(p + 48); int spCubeNum0SV;
	FSeek(p + 52); int spCubeNum1FV;
	FSeek(p + 56); int spCubeNum1SV;
	FSeek(p + 60); int spCubeNum2FV;
	FSeek(p + 64); int spCubeNum2SV;
	FSeek(p + 68); float motionSpeed;
	FSeek(p + 72); float cameraInSpeed;
	FSeek(p + 76); float cameraOutSpeed;
	FSeek(p + 80); float cameraStartWait;

	FSeek(p + 84);
} GadgetCubeSpecial;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float airDamageRadiusFV;
	FSeek(p + 4); float airDamageRadiusSV;

	FSeek(p + 8);
} GadgetCubeAir;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   float activeTime;
	FSeek(p + 4);   float decreaseTime;
	FSeek(p + 8);   float attackDamageRadiusFV;
	FSeek(p + 12);  float attackDamageRadiusSV;
	FSeek(p + 16);  GadgetCubeNormal normal;
	FSeek(p + 48);  GadgetCubeSpecial special;
	FSeek(p + 132); GadgetCubeAir air;

	FSeek(p + 140);
} GadgetCubeParameter;

enum<byte> bool { False = 0, True = 1 };

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float chargeKeepTime;
	FSeek(p + 4);  float shiftDownTime;
	FSeek(p + 8);  float dashHoldTime;
	FSeek(p + 12); bool enableChargeInvincible;
	FSeek(p + 13); bool enableChargeAttack;
	FSeek(p + 14); bool enableDashInvincible;

	FSeek(p + 16);
} GadgetDrillDash;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   float speed1;
	FSeek(p + 4);   float speed2;
	FSeek(p + 8);   float speed3;
	FSeek(p + 12);  float speed4;
	FSeek(p + 16);  float endSpeed1;
	FSeek(p + 20);  float endSpeed2;
	FSeek(p + 24);  float endSpeed3;
	FSeek(p + 28);  float endSpeed4;
	FSeek(p + 32);  float brake;
	FSeek(p + 36);  float keepSpeedTime1;
	FSeek(p + 40);  float keepSpeedTime2;
	FSeek(p + 44);  float keepSpeedTime3;
	FSeek(p + 48);  float keepSpeedTime4;
	FSeek(p + 52);  float gravity;
	FSeek(p + 56);  float noGravityTime;
	FSeek(p + 60);  float chargeRotateSpeed;
	FSeek(p + 64);  float rotateSpeed;
	FSeek(p + 68);  float hitCollisionRadius1;
	FSeek(p + 72);  float hitCollisionRadius2;
	FSeek(p + 76);  float hitCollisionRadius3;
	FSeek(p + 80);  float hitCollisionRadius4;
	FSeek(p + 84);  float hitCollisionHeight1;
	FSeek(p + 88);  float hitCollisionHeight2;
	FSeek(p + 92);  float hitCollisionHeight3;
	FSeek(p + 96);  float hitCollisionHeight4;
	FSeek(p + 100); float hitCollisionOffset1_X;
	FSeek(p + 104); float hitCollisionOffset1_Y;
	FSeek(p + 108); float hitCollisionOffset1_Z;
	FSeek(p + 112); float hitCollisionOffset2_X;
	FSeek(p + 116); float hitCollisionOffset2_Y;
	FSeek(p + 120); float hitCollisionOffset2_Z;
	FSeek(p + 124); float hitCollisionOffset3_X;
	FSeek(p + 128); float hitCollisionOffset3_Y;
	FSeek(p + 132); float hitCollisionOffset3_Z;
	FSeek(p + 136); float hitCollisionOffset4_X;
	FSeek(p + 140); float hitCollisionOffset4_Y;
	FSeek(p + 144); float hitCollisionOffset4_Z;
	FSeek(p + 148); float mapHitOffset1;
	FSeek(p + 152); float mapHitOffset2;
	FSeek(p + 156); float mapHitOffset3;
	FSeek(p + 160); float mapHitOffset4;
	FSeek(p + 164); float chargeBrake;
	FSeek(p + 168); float chargeDanperBrakeRate;

	FSeek(p + 172);
} GadgetDrillDashFV;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   float speed1;
	FSeek(p + 4);   float speed2;
	FSeek(p + 8);   float speed3;
	FSeek(p + 12);  float speed4;
	FSeek(p + 16);  float endSpeed1;
	FSeek(p + 20);  float endSpeed2;
	FSeek(p + 24);  float endSpeed3;
	FSeek(p + 28);  float endSpeed4;
	FSeek(p + 32);  float brake;
	FSeek(p + 36);  float keepSpeedTime1;
	FSeek(p + 40);  float keepSpeedTime2;
	FSeek(p + 44);  float keepSpeedTime3;
	FSeek(p + 48);  float keepSpeedTime4;
	FSeek(p + 52);  float gravity;
	FSeek(p + 56);  float noGravityTime;
	FSeek(p + 60);  float hitCollisionRadius1;
	FSeek(p + 64);  float hitCollisionRadius2;
	FSeek(p + 68);  float hitCollisionRadius3;
	FSeek(p + 72);  float hitCollisionRadius4;
	FSeek(p + 76);  float hitCollisionHeight1;
	FSeek(p + 80);  float hitCollisionHeight2;
	FSeek(p + 84);  float hitCollisionHeight3;
	FSeek(p + 88);  float hitCollisionHeight4;
	FSeek(p + 92);  float hitCollisionOffset1_X;
	FSeek(p + 96);  float hitCollisionOffset1_Y;
	FSeek(p + 100); float hitCollisionOffset1_Z;
	FSeek(p + 104); float hitCollisionOffset2_X;
	FSeek(p + 108); float hitCollisionOffset2_Y;
	FSeek(p + 112); float hitCollisionOffset2_Z;
	FSeek(p + 116); float hitCollisionOffset3_X;
	FSeek(p + 120); float hitCollisionOffset3_Y;
	FSeek(p + 124); float hitCollisionOffset3_Z;
	FSeek(p + 128); float hitCollisionOffset4_X;
	FSeek(p + 132); float hitCollisionOffset4_Y;
	FSeek(p + 136); float hitCollisionOffset4_Z;
	FSeek(p + 140); float mapHitOffset1;
	FSeek(p + 144); float mapHitOffset2;
	FSeek(p + 148); float mapHitOffset3;
	FSeek(p + 152); float mapHitOffset4;
	FSeek(p + 156); float chargeBrake;
	FSeek(p + 160); float chargeDanperBrakeRate;

	FSeek(p + 164);
} GadgetDrillDashSV;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float speed;
	FSeek(p + 4);  float accel;
	FSeek(p + 8);  float brake;
	FSeek(p + 12); float startBrake;
	FSeek(p + 16); float startDanperBrakeRate;
	FSeek(p + 20); float wallSpeed;
	FSeek(p + 24); float wallAccel;
	FSeek(p + 28); float wallBrake;
	FSeek(p + 32); float edgeMoveTime;
	FSeek(p + 36); float rotateSpeed;
	FSeek(p + 40); float jumpSpeed;
	FSeek(p + 44); float hitCollisionRadius;
	FSeek(p + 48); float hitCollisionOffsetX;
	FSeek(p + 52); float hitCollisionOffsetY;
	FSeek(p + 56); float hitCollisionOffsetZ;

	FSeek(p + 60);
} GadgetDrillBoostFV;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float speed;
	FSeek(p + 4);  float accel;
	FSeek(p + 8);  float brake;
	FSeek(p + 12); float startBrake;
	FSeek(p + 16); float startDanperBrakeRate;
	FSeek(p + 20); float wallSpeed;
	FSeek(p + 24); float wallAccel;
	FSeek(p + 28); float wallBrake;
	FSeek(p + 32); float edgeMoveTime;
	FSeek(p + 36); float jumpSpeed;
	FSeek(p + 40); float hitCollisionRadius;
	FSeek(p + 44); float hitCollisionOffsetX;
	FSeek(p + 48); float hitCollisionOffsetY;
	FSeek(p + 52); float hitCollisionOffsetZ;

	FSeek(p + 56);
} GadgetDrillBoostSV;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   float activeTime;
	FSeek(p + 4);   float decreaseTime;
	FSeek(p + 8);   GadgetDrillDash dash;
	FSeek(p + 24);  GadgetDrillDashFV dashFV;
	FSeek(p + 196); GadgetDrillDashSV dashSV;
	FSeek(p + 360); GadgetDrillBoostFV boostFV;
	FSeek(p + 420); GadgetDrillBoostSV boostSV;

	FSeek(p + 476);
} GadgetDrillParameter;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float radius;
	FSeek(p + 4);  float height;
	FSeek(p + 8);  float rotateSpeed;
	FSeek(p + 12); float shotSpeed;
	FSeek(p + 16); float shotMoveTime;
	FSeek(p + 20); float shotReloadTime;
	FSeek(p + 24); float shotReloadRadius;
	FSeek(p + 28); float inletRadius;

	FSeek(p + 32);
} GadgetAsteroidFV;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float radius;
	FSeek(p + 4);  float height;
	FSeek(p + 8);  float rotateSpeed;
	FSeek(p + 12); float shotSpeed;
	FSeek(p + 16); float shotMoveTime;
	FSeek(p + 20); float shotReloadTime;
	FSeek(p + 24); float shotReloadRadius;
	FSeek(p + 28); float inletRadius;

	FSeek(p + 32);
} GadgetAsteroidSV;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float activeTime;
	FSeek(p + 4);  float decreaseTime;
	FSeek(p + 8);  float maxFallSpeed;
	FSeek(p + 12); float hoverTime;
	FSeek(p + 16); float shotSpeedToBoss;
	FSeek(p + 20); float stopTraceSpeed;
	FSeek(p + 24); float stopTraceTime;
	FSeek(p + 28); GadgetAsteroidFV fv;
	FSeek(p + 60); GadgetAsteroidSV sv;

	FSeek(p + 92);
} GadgetAsteroidParameter;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float radius;
	FSeek(p + 4);  float offsetHeight;
	FSeek(p + 8);  float bulletSpeed;
	FSeek(p + 12); float activeTime;
	FSeek(p + 16); float enemyBulletSpeed;
	FSeek(p + 20); float bulletCollisionOffsetY;
	FSeek(p + 24); float bulletActiveTime;
	FSeek(p + 28); float targetSearchDistance;
	FSeek(p + 32); float searchRengeAngle;
	FSeek(p + 36); float searchInterval;
	FSeek(p + 40); float interpolationTime;

	FSeek(p + 44);
} GadgetHoverAttackFV;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float radius;
	FSeek(p + 4);  float offsetHeight;
	FSeek(p + 8);  float bulletSpeed;
	FSeek(p + 12); float activeTime;
	FSeek(p + 16); float enemyBulletSpeed;
	FSeek(p + 20); float bulletCollisionOffsetY;
	FSeek(p + 24); float bulletActiveTime;

	FSeek(p + 28);
} GadgetHoverAttackSV;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float gravitySizeFV;
	FSeek(p + 4);  float absoluteTimeFV;
	FSeek(p + 8);  float addUpForceFV;
	FSeek(p + 12); float maxUpSpeedFV;
	FSeek(p + 16); float minUpSpeedFV;
	FSeek(p + 20); float maxSpeedFV;
	FSeek(p + 24); float acceleForceFV;
	FSeek(p + 28); float deceleForceFV;
	FSeek(p + 32); float maxDistansFV;
	FSeek(p + 36); float gravitySizeSV;
	FSeek(p + 40); float absoluteTimeSV;
	FSeek(p + 44); float addUpForceSV;
	FSeek(p + 48); float maxUpSpeedSV;
	FSeek(p + 52); float minUpSpeedSV;
	FSeek(p + 56); float maxSpeedSV;
	FSeek(p + 60); float acceleForceSV;
	FSeek(p + 64); float deceleForceSV;
	FSeek(p + 68); float maxDistansSV;
	FSeek(p + 72); float initialSpeedFV;
	FSeek(p + 76); float floatingTimeFV;
	FSeek(p + 80); float launchAngleFV;
	FSeek(p + 84); float initialSpeedSV;
	FSeek(p + 88); float floatingTimeSV;
	FSeek(p + 92); float launchAngleSV;

	FSeek(p + 96);
} GagetHoverJump;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float initialSpeed;
	FSeek(p + 4);  float acceleForce;
	FSeek(p + 8);  float maxSpeed;
	FSeek(p + 12); float jumpOffset;

	FSeek(p + 16);
} GadgetHoverRescue;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   float activeTime;
	FSeek(p + 4);   float decreaseTime;
	FSeek(p + 8);   float attackDecreaseTime;
	FSeek(p + 12);  float shootingInterval;
	FSeek(p + 16);  float firstJumpDecreaseTime;
	FSeek(p + 20);  float jumpDecreaseTime;
	FSeek(p + 24);  GadgetHoverAttackFV attackFV;
	FSeek(p + 68);  GadgetHoverAttackSV attackSV;
	FSeek(p + 96);  GagetHoverJump jump;
	FSeek(p + 192); GadgetHoverRescue rescue;
	FSeek(p + 208); GagetHoverJump rescueJump;

	FSeek(p + 304);
} GadgetHoverParameter;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float decreaseTime;
	FSeek(p + 4);  float ballRadiusFV;
	FSeek(p + 8);  float ballRadiusSV;
	FSeek(p + 12); float ballRadSpeedFV;
	FSeek(p + 16); float ballRadSpeedSV;
	FSeek(p + 20); float gravityRadiusFV;
	FSeek(p + 24); float gravityRadiusSV;
	FSeek(p + 28); float gravityRadSpeedFV;
	FSeek(p + 32); float gravityRadSpeedSV;
	FSeek(p + 36); float moveSpeedFV;
	FSeek(p + 40); float moveSpeedSV;
	FSeek(p + 44); float activeTimeFV;
	FSeek(p + 48); float activeTimeSV;

	FSeek(p + 52);
} GadgetVoidNormal;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float decreaseTime;
	FSeek(p + 4);  float moveLengthFV;
	FSeek(p + 8);  float moveLengthSV;
	FSeek(p + 12); float moveLengthUpFV;
	FSeek(p + 16); float moveLengthUpSV;
	FSeek(p + 20); float moveTimeFV;
	FSeek(p + 24); float moveTimeSV;
	FSeek(p + 28); float moveAttackRadFV;
	FSeek(p + 32); float moveAttackRadSV;
	FSeek(p + 36); float lastAttackRadFV;
	FSeek(p + 40); float lastAttackRadSV;

	FSeek(p + 44);
} GadgetVoidSpecial;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float gravitySizeFV;
	FSeek(p + 4);  float absoluteTimeFV;
	FSeek(p + 8);  float addUpForceFV;
	FSeek(p + 12); float maxUpSpeedFV;
	FSeek(p + 16); float minUpSpeedFV;
	FSeek(p + 20); float maxSpeedFV;
	FSeek(p + 24); float acceleForceFV;
	FSeek(p + 28); float deceleForceFV;
	FSeek(p + 32); float maxDistansFV;
	FSeek(p + 36); float gravitySizeSV;
	FSeek(p + 40); float absoluteTimeSV;
	FSeek(p + 44); float addUpForceSV;
	FSeek(p + 48); float maxUpSpeedSV;
	FSeek(p + 52); float minUpSpeedSV;
	FSeek(p + 56); float maxSpeedSV;
	FSeek(p + 60); float acceleForceSV;
	FSeek(p + 64); float deceleForceSV;
	FSeek(p + 68); float maxDistansSV;
	FSeek(p + 72); float activeTimeFV;
	FSeek(p + 76); float activeTimeSV;

	FSeek(p + 80);
} GadgetVoidRescueFloat;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   float activeTime;
	FSeek(p + 4);   float decreaseTime;
	FSeek(p + 8);   GadgetVoidNormal normal;
	FSeek(p + 60);  GadgetVoidSpecial special;
	FSeek(p + 104); GadgetVoidRescueFloat floating;

	FSeek(p + 184);
} GadgetVoidParameter;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);    GadgetCommonParameter common;
	FSeek(p + 4);    GadgetBurstParameter burst;
	FSeek(p + 68);   GadgetLightningParameter lightning;
	FSeek(p + 204);  GadgetCubeParameter cube;
	FSeek(p + 344);  GadgetDrillParameter drill;
	FSeek(p + 820);  GadgetAsteroidParameter asteroid;
	FSeek(p + 912);  GadgetHoverParameter hover;
	FSeek(p + 1216); GadgetVoidParameter gadget_void;

	FSeek(p + 1400);
} GadgetParameters;

FSeek(0x40);
GadgetParameters data;