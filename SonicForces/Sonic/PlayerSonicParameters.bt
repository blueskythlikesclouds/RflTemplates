//----------------------------------------//
// This file was auto-generated by Skyth. //
//----------------------------------------//

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float speed;
	FSeek(p + 4);  float acceleForce;
	FSeek(p + 8);  float acceleSideForce;
	FSeek(p + 12); float deceleSideForce;
	FSeek(p + 16); float maxSideSpeed;
	FSeek(p + 20); float jumpHeight;
	FSeek(p + 24); float jumpSpeed;
	FSeek(p + 28); float jumpTime;
	FSeek(p + 32); float jumpAcceleSideForce;
	FSeek(p + 36); float jumpDeceleSideForce;
	FSeek(p + 40); float jumpMaxSideSpeed;
	FSeek(p + 44); float spinTime;
	FSeek(p + 48); int numSpin;
	FSeek(p + 52); float decreaseRate;
	FSeek(p + 56); float decreaseRateDamage;
	FSeek(p + 60); float increaseRateRing;
	FSeek(p + 64); float increaseRateRingWeak;
	FSeek(p + 68); float damageTime;
	FSeek(p + 72); float inletRadius;
	FSeek(p + 76); float weakSpeedRatio;
	FSeek(p + 80); float slowRate;
	FSeek(p + 84); float inputRangeBegin;
	FSeek(p + 88); float inputSuccessBegin;
	FSeek(p + 92); float inputSuccessEnd;
	FSeek(p + 96); float failedStumbleTime;

	FSeek(p + 100);
} PlayerParamDoubleBoost;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); PlayerParamDoubleBoost doubleboost;

	FSeek(p + 100);
} SonicPackage;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float decreaseFirst;
	FSeek(p + 4);  float decreaseRate;
	FSeek(p + 8);  float initialSpeed;
	FSeek(p + 12); float maxSpeed;
	FSeek(p + 16); float maxSpeedAir;
	FSeek(p + 20); float acceleForce;
	FSeek(p + 24); float acceleSideForce;
	FSeek(p + 28); float rotationForce;
	FSeek(p + 32); float maxUpAngle;
	FSeek(p + 36); float time;
	FSeek(p + 40); float continueTime;
	FSeek(p + 44); float cancelSpeed;

	FSeek(p + 48);
} PlayerParamBoost;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float speed;

	FSeek(p + 4);
} PlayerParamWallRun;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float hangApproachSpeed;
	FSeek(p + 4); float hangApproachMinTime;
	FSeek(p + 8); float speed;

	FSeek(p + 12);
} PlayerParamClimbWall;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float initialFrontSpeed;
	FSeek(p + 4);  float initialUpSpeed;
	FSeek(p + 8);  float initialDashSpeed;
	FSeek(p + 12); float initialDashBrake;

	FSeek(p + 16);
} PlayerParamCancelStep;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  PlayerParamBoost boost;
	FSeek(p + 48); PlayerParamWallRun wallRun;
	FSeek(p + 52); PlayerParamClimbWall climbWall;
	FSeek(p + 64); PlayerParamCancelStep cancelStep;

	FSeek(p + 80);
} SonicModePackage;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   SonicPackage common;
	FSeek(p + 100); SonicModePackage forwardView;
	FSeek(p + 180); SonicModePackage sideView;
	FSeek(p + 260); SonicModePackage forwardViewWater;
	FSeek(p + 340); SonicModePackage sideViewWater;

	FSeek(p + 420);
} PlayerSonicParameters;

FSeek(0x40);
PlayerSonicParameters data;