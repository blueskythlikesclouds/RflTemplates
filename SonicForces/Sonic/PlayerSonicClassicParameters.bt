//----------------------------------------//
// This file was auto-generated by Skyth. //
//----------------------------------------//

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); int dummy;

	FSeek(p + 4);
} SonicClassicPackage;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float brakeForce;
	FSeek(p + 4);  float startForce;
	FSeek(p + 8);  float stopSpeed;
	FSeek(p + 12); float brake;
	FSeek(p + 16); float slipBrakeForce;
	FSeek(p + 20); float slipBrake;
	FSeek(p + 24); float slipSpeed;
	FSeek(p + 28); float slipTime;
	FSeek(p + 32); float standableSlopeAngle;
	FSeek(p + 36); float maxSpeedUpRate;
	FSeek(p + 40); float accelUpRate;
	FSeek(p + 44); float brakeUpRate;
	FSeek(p + 48); float walkSpeed;
	FSeek(p + 52); float stumbleSpeed;

	FSeek(p + 56);
} SonicClassicParamBase;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float maxLowBrakeSpeed;
	FSeek(p + 4);  float initialSpeedRatio;
	FSeek(p + 8);  float maxSpeed;
	FSeek(p + 12); float forceBrake;
	FSeek(p + 16); float forceTurn;
	FSeek(p + 20); float endSpeed;
	FSeek(p + 24); float maxTurnSpeed;
	FSeek(p + 28); float turnSpeed;
	FSeek(p + 32); float turnStartFrame;

	FSeek(p + 36);
} SonicClassicParamBrake;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float chargeTime0;
	FSeek(p + 4);  float chargeTime1;
	FSeek(p + 8);  float chargeTime2;
	FSeek(p + 12); float dashSpeed0;
	FSeek(p + 16); float dashSpeed1;
	FSeek(p + 20); float dashSpeed2;
	FSeek(p + 24); float dashSpeedWater;
	FSeek(p + 28); float maxSpeedAir;
	FSeek(p + 32); float brake;
	FSeek(p + 36); float chargeBrake;
	FSeek(p + 40); float chargeDamperBrakeRate;
	FSeek(p + 44); float checkGroundDist;
	FSeek(p + 48); float minChangeSpeed;
	FSeek(p + 52); float maxRunningSpeed;
	FSeek(p + 56); float dropChargeTime0;
	FSeek(p + 60); float dropChargeTime1;
	FSeek(p + 64); float dropChargeTime2;
	FSeek(p + 68); float dropDashSpeed0;
	FSeek(p + 72); float dropDashSpeed1;
	FSeek(p + 76); float dropDashSpeed2;
	FSeek(p + 80); float dropDashSpeedWater;
	FSeek(p + 84); float controlSpeed;
	FSeek(p + 88); float airAccel;
	FSeek(p + 92); float maxControlSpeed;

	FSeek(p + 96);
} SonicClassicParamSpinDash;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float maxSpeedAir;
	FSeek(p + 4); float brake;

	FSeek(p + 8);
} SonicClassicParamPinBall;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float effectOffsetNormal_X;
	FSeek(p + 4);  float effectOffsetNormal_Y;
	FSeek(p + 8);  float effectOffsetNormal_Z;
	FSeek(p + 12); float effectOffsetBall_X;
	FSeek(p + 16); float effectOffsetBall_Y;
	FSeek(p + 20); float effectOffsetBall_Z;
	FSeek(p + 24); float effectOffsetSleep_X;
	FSeek(p + 28); float effectOffsetSleep_Y;
	FSeek(p + 32); float effectOffsetSleep_Z;

	FSeek(p + 36);
} SonicClassicParamBarrier;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   SonicClassicParamBase base;
	FSeek(p + 56);  SonicClassicParamBrake brake;
	FSeek(p + 92);  SonicClassicParamSpinDash spindash;
	FSeek(p + 188); SonicClassicParamPinBall pinball;
	FSeek(p + 196); SonicClassicParamBarrier barrier;

	FSeek(p + 232);
} SonicClassicModePackage;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   SonicClassicPackage common;
	FSeek(p + 4);   SonicClassicModePackage forwardView;
	FSeek(p + 236); SonicClassicModePackage sideView;
	FSeek(p + 468); SonicClassicModePackage forwardViewWater;
	FSeek(p + 700); SonicClassicModePackage sideViewWater;

	FSeek(p + 932);
} PlayerSonicClassicParameters;

FSeek(0x40);
PlayerSonicClassicParameters data;