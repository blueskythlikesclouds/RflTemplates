//----------------------------------------//
// This file was auto-generated by Skyth. //
//----------------------------------------//

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float posX;
	FSeek(p + 4); float posY;
	FSeek(p + 8); float posZ;

	FSeek(p + 12);
} PositionParam;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float cameraPosX;
	FSeek(p + 4);  float cameraPosY;
	FSeek(p + 8);  float cameraPosZ;
	FSeek(p + 12); float targetPosX;
	FSeek(p + 16); float targetPosY;
	FSeek(p + 20); float targetPosZ;
	FSeek(p + 24); float fovY;
	FSeek(p + 28); float betweenRatio;

	FSeek(p + 32);
} CameraData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0); float x;
	FSeek(p + 4); float y;
	FSeek(p + 8); float z;

	FSeek(p + 12);
} CameraTargetData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float m_rotateXMin;
	FSeek(p + 4);  float m_rotateXMax;
	FSeek(p + 8);  float m_rotateYMin;
	FSeek(p + 12); float m_rotateYMax;
	FSeek(p + 16); float m_builtInRotateX;
	FSeek(p + 20); float m_builtInRotateY;
	FSeek(p + 24); float m_builtInRotateZ;

	FSeek(p + 28);
} PlanetRotateParam;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float lightDirX;
	FSeek(p + 4);  float lightDirY;
	FSeek(p + 8);  float lightDirZ;
	FSeek(p + 12); float lightColorR;
	FSeek(p + 16); float lightColorG;
	FSeek(p + 20); float lightColorB;

	FSeek(p + 24);
} LightParam;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float ratioX;
	FSeek(p + 4);  float ratioY;
	FSeek(p + 8);  float rotateSpeed;
	FSeek(p + 12); float cursorSpeedOutSide;
	FSeek(p + 16); float absorbDistance;
	FSeek(p + 20); float absorbSpeed;
	FSeek(p + 24); float absorbSpeedOutSide;
	FSeek(p + 28); PositionParam minCursorPos;
	FSeek(p + 40); PositionParam maxCursorPos;

	FSeek(p + 52);
} PlanetCursorParam;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);  float prisonRotateRatio;
	FSeek(p + 4);  float toDeathEggScreenPosX;
	FSeek(p + 8);  float toDeathEggScreenPosY;
	FSeek(p + 12); float toEarthScreenPosX;
	FSeek(p + 16); float toEarthScreenPosY;

	FSeek(p + 20);
} MiscData;

typedef struct {
	local uint64 p<hidden=true> = FTell();

	FSeek(p + 0);   PositionParam m_earthPos;
	FSeek(p + 12);  CameraData m_earthCameraParam;
	FSeek(p + 44);  PositionParam m_deathEggPos;
	FSeek(p + 56);  CameraData m_deathEggCameraParam;
	FSeek(p + 88);  PositionParam m_prisonPos;
	FSeek(p + 100); CameraTargetData m_prisonCameraTarget;
	FSeek(p + 112); PlanetRotateParam m_EarthRotateParam;
	FSeek(p + 140); PlanetRotateParam m_DeathEggRotateParam;
	FSeek(p + 168); LightParam m_lightParam;
	FSeek(p + 192); PlanetCursorParam m_cursorEarth;
	FSeek(p + 244); PlanetCursorParam m_cursorDeathEgg;
	FSeek(p + 296); MiscData m_miscData;

	FSeek(p + 316);
} WorldMapCameraParameter;

FSeek(0x40);
WorldMapCameraParameter data;